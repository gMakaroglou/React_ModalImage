{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Makjin\\\\Documents\\\\ptuxiakh\\\\React_ModalImage\\\\src\\\\ImageModal.js\";\nimport React from 'react';\nimport firebase from './firebaseconfig';\nimport Modal from './modalexample';\n\nclass ImageModal extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      inco6: '',\n      // inco2: ''\n      image: \"\"\n    };\n  }\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    this.getImage();\n  }\n\n  getImage() {\n    const storage = firebase.storage().ref();\n    let image = this.props.image;\n    let user = this.props.user;\n\n    if (user != undefined) {\n      user = user.replace('.', ',');\n      let {\n        state\n      } = this;\n      storage.child(`/${user}/${image}`).getDownloadURL().then(url => {\n        this.state.image = url;\n        this.setState(state);\n      }).catch(error => {// Handle any errors\n      }); //   console.log(this.state)\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state !== nextState) {\n      this.getImage();\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      open: this.state.showModal,\n      image: this.state.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"...\"));\n  }\n\n}\n\nexport default ImageModal; //   ReactDOM.render(\n//     <HelloMessage name=\"Jane\" />,\n//     document.getElementById('app')\n//   )","map":{"version":3,"sources":["C:/Users/Makjin/Documents/ptuxiakh/React_ModalImage/src/ImageModal.js"],"names":["React","firebase","Modal","ImageModal","Component","constructor","state","inco6","image","componentDidUpdate","componentDidMount","getImage","storage","ref","props","user","undefined","replace","child","getDownloadURL","then","url","setState","catch","error","shouldComponentUpdate","nextProps","nextState","render","showModal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,GAAI;AACb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEZ;AACAC,MAAAA,KAAK,EAAC;AAHM,KAAb;AAOD;;AACDC,EAAAA,kBAAkB,GAAE,CAEnB;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL;AACH;;AACDA,EAAAA,QAAQ,GAAI;AAER,UAAMC,OAAO,GAAGX,QAAQ,CAACW,OAAT,GAAmBC,GAAnB,EAAhB;AACA,QAAIL,KAAK,GAAG,KAAKM,KAAL,CAAWN,KAAvB;AACA,QAAIO,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;;AACA,QAAGA,IAAI,IAAEC,SAAT,EAAmB;AACnBD,MAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,GAAb,EAAiB,GAAjB,CAAP;AACF,UAAI;AAAEX,QAAAA;AAAF,UAAY,IAAhB;AACFM,MAAAA,OAAO,CAACM,KAAR,CAAe,IAAGH,IAAK,IAAGP,KAAM,EAAhC,EAAmCW,cAAnC,GAAoDC,IAApD,CAA0DC,GAAD,IAAS;AAC9D,aAAKf,KAAL,CAAWE,KAAX,GAAmBa,GAAnB;AACA,aAAKC,QAAL,CAAchB,KAAd;AACD,OAHH,EAGKiB,KAHL,CAGYC,KAAD,IAAW,CAClB;AACD,OALH,EAHuB,CASxB;AACE;AACA;;AACHC,EAAAA,qBAAqB,CAACC,SAAD,EAAWC,SAAX,EAAqB;AACxC,QAAG,KAAKrB,KAAL,KAAeqB,SAAlB,EAA4B;AAC1B,WAAKhB,QAAL;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AACCiB,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWuB,SAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWE,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZA,CADF;AAgBD;;AA3DoC;;AA6DvC,eAAeL,UAAf,C,CACF;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport firebase from './firebaseconfig'\r\nimport Modal from './modalexample' \r\n\r\nclass ImageModal extends React.Component {\r\n    constructor () {\r\n      super()\r\n      this.state = {\r\n        inco6: '',\r\n       // inco2: ''\r\n       image:\"\"\r\n      }\r\n      \r\n     \r\n    }\r\n    componentDidUpdate(){  \r\n\r\n    }\r\n    componentDidMount(){\r\n        this.getImage();\r\n    }\r\n    getImage () {\r\n\r\n        const storage = firebase.storage().ref();   \r\n        let image = this.props.image;\r\n        let user = this.props.user;\r\n        if(user!=undefined){\r\n        user = user.replace('.',',');\r\n      let { state } = this\r\n    storage.child(`/${user}/${image}`).getDownloadURL().then((url) => {\r\n        this.state.image = url\r\n        this.setState(state)\r\n      }).catch((error) => {\r\n        // Handle any errors\r\n      })\r\n   //   console.log(this.state)\r\n    }\r\n    }\r\n  shouldComponentUpdate(nextProps,nextState){\r\n    if(this.state !== nextState){\r\n      this.getImage();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n    render() {\r\n\r\n      return (\r\n        <div>\r\n          {/* Hello Lithuania<br />\r\n          <img src={ this.state.inco1 } alt=\"Lithuanian flag\" />\r\n          <br />\r\n          Hello United Kingdom<br />\r\n          <img src={ this.state.inco3 } alt=\"UK flag\" />\r\n          { /* all the markup of your page */ }\r\n        {/* <button onClick={() => this.setState({showModal: true})}>Add Work Log</button>\r\n        <button onClick={() => this.getImage(this.props.image)}>HOWDY</button> */} \r\n        { /* anything else */ }\r\n\r\n        { /* modal is here but it is hidden */ }\r\n        <Modal open={this.state.showModal} image={this.state.image}>...</Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default ImageModal;\r\n//   ReactDOM.render(\r\n//     <HelloMessage name=\"Jane\" />,\r\n//     document.getElementById('app')\r\n//   )"]},"metadata":{},"sourceType":"module"}