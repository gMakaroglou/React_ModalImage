{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Makjin\\\\Documents\\\\ptuxiakh\\\\React_ModalImage\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport FirebaseConfig from './firebaseconfig';\nimport Firebase from \"firebase\";\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport TextField from 'material-ui/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport orderBy from 'lodash.orderby';\nimport { Divider, Form, Label } from 'semantic-ui-react';\nimport './FlexBox.css';\nimport FilteringComp from './FIlteringomponent';\nimport { concat } from 'bytebuffer';\nimport DTP from './DateTimePick';\nimport Mattable from './newmattable';\nimport Gmaps from './Gmaps';\nimport styles from './styles.module.css';\nimport papeilogo from './images/papei-logo.jpg';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserData = () => {\n      if (!this.state.loaded) {\n        let ref = Firebase.database().ref(\"/SensorFoo/\");\n        ref.on(\"value\", snapshot => {\n          const state = snapshot.val();\n          console.log(this.state.loaded);\n          this.setState({\n            loaded: true\n          });\n          console.log(this.state.loaded);\n          this.setState({\n            FirebaseData: state\n          });\n        });\n      }\n    };\n\n    this.ChangeFilterStatus = e => {\n      let currentqueries = { ...this.state.queries\n      };\n      let queryname = e.target.name;\n      currentqueries[e.target.name] = e.target.value;\n      console.log(\"Current Queries\" + currentqueries);\n      console.log(\"e target name\" + e.target.name);\n      this.setState({\n        queries: currentqueries,\n        [queryname]: e.target.value\n      });\n    };\n\n    this.ChangeFilterColumnStatus = (event, index, value, FilterNumber) => {\n      let currentcolumns = { ...this.state.columnsToQuery\n      };\n      let Columntoquery = \"columnToQuery\" + FilterNumber;\n      currentcolumns[\"columnToQuery\" + FilterNumber] = value;\n      this.setState({\n        columnsToQuery: currentcolumns,\n        [Columntoquery]: value\n      }); //   this.setState({columnToQuery1 : value,\n      // columnsToQuery : [...this.state.columnsToQuery,value]})\n    };\n\n    this.hideFilter = queryToHide => {\n      let query = \"showquery\" + queryToHide;\n      this.setState(state => ( // this is the current state\n      {\n        numberoffilters: state.numberoffilters - 1,\n        // this will be the previous randomNumber\n        [query]: false\n      }));\n      console.log(this.state.numberoffilters);\n    };\n\n    this.showFilter = () => {\n      this.setState(state => ( // this is the current state\n      {\n        numberoffilters: state.numberoffilters + 1,\n        // this will be the previous randomNumber\n        showquery3: this.state.numberoffilters + 1 >= 3 ? true : false,\n        showquery4: this.state.numberoffilters + 1 >= 4 ? true : false,\n        showquery5: this.state.numberoffilters + 1 >= 5 ? true : false\n      }));\n    };\n\n    this.changeDateValue = date => {\n      this.setState(state => ({\n        dateFrom: date\n      }));\n      console.log(this.state.dateFrom);\n    };\n\n    this.changeDateValueTo = date => {\n      this.setState(state => ({\n        dateTo: date\n      }));\n    };\n\n    this.changeTimeValue = time => {\n      this.setState(state => ({\n        timeFrom: time\n      }));\n    };\n\n    this.changeTimeValueTo = time => {\n      console.log(time);\n      this.setState(state => ({\n        timeTo: time\n      }));\n    };\n\n    this.updateSelectedRows = rows => {\n      console.log(rows);\n      this.setState(state => ({\n        selrows: rows\n      }));\n    };\n\n    this.viewOnMaps = e => {\n      this.state.Mapsarray = [];\n      let temparr = [];\n      let tempMaps = this.state.MapLocs;\n      this.state.posremove = [];\n      let positionschanged = false;\n      console.log(this.state.selrows);\n      console.log(this.state.MapLocs[this.state.selrows]);\n      console.log(this.state.Mapsarray);\n\n      for (let pos in this.state.MapLocs) {\n        if (!this.state.MapLocs[pos].eligible) {\n          this.state.posremove.push(pos);\n          positionschanged = true;\n        } //  this.state.Mapsarray.push(e[this.state.selrows[marker]])   \n\n      }\n\n      console.log(this.state.posremove);\n      let removeValFromIndex = this.state.posremove;\n\n      for (var i = removeValFromIndex.length - 1; i >= 0; i--) {\n        this.state.MapLocs.splice(removeValFromIndex[i], 1);\n      }\n\n      console.log(this.state.MapLocs);\n\n      for (let marker in this.state.selrows) {\n        console.log(this.state.selrows[marker]);\n        temparr.push(this.state.MapLocs[this.state.selrows[marker]]); //  this.state.Mapsarray.push(e[this.state.selrows[marker]])\n      }\n\n      if (!positionschanged) {\n        this.setState(state => ({\n          Mapsarray: temparr,\n          NewMapLocs: this.state.MapLocs\n        }));\n        console.log(this.state.Mapsarray);\n      } else {\n        this.setState(state => ({\n          Mapsarray: this.state.MapLocs,\n          NewMapLocs: this.state.MapLocs\n        }));\n        console.log(this.state.Mapsarray);\n      }\n    };\n\n    if (!Firebase.apps.length) {\n      const firebaseApp = Firebase.initializeApp(FirebaseConfig);\n    }\n\n    this.state = {\n      SensorValues: [],\n      //State Variable for Firebase Data\n      FirebaseData: [],\n      //User Input for Filtering\n      query1: '',\n      query2: '',\n      query3: '',\n      query4: '',\n      query5: '',\n      query6: '',\n      queries: [],\n      //Number Of Columns for Filtering\n      columnToQuery1: '',\n      columnToQuery2: '',\n      columnToQuery3: '',\n      columnToQuery4: '',\n      columnToQuery5: '',\n      columnToQuery6: '',\n      columnsToQuery: [],\n      numberoffilters: 2,\n      showquery3: false,\n      showquery4: false,\n      showquery5: false,\n      //Initialized Timestamps\n      dateFrom: '2019-09-18T21:11:57',\n      dateTo: '2020-02-18T21:11:57',\n      timeFrom: '2019-08-18T21:11:54',\n      timeTo: '2019-08-18T21:11:53',\n      selrows: [],\n      MapLocs: [],\n      Mapsarray: [],\n      NewMapLocs: [],\n      posremove: [],\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.loaded) {\n      this.getUserData();\n      console.log(this.state.loaded);\n    }\n  }\n\n  componentDidUpdate() {} //Get Data From Firebase\n\n\n  render() {\n    var SensorValuestmp = [];\n    let SensorValuesFinal = [];\n    var SensorValues = this.state.FirebaseData;\n    console.log(this.state);\n\n    for (let user in SensorValues) {\n      for (let record in SensorValues[user]) {\n        SensorValuestmp = [];\n        Object.keys(SensorValues[user][record]).map(x => {\n          SensorValuestmp.push(SensorValues[user][record][x]);\n        });\n        SensorValuestmp.push(SensorValues[user][record][\"test\"]);\n        SensorValuesFinal = [...SensorValuesFinal, Object.assign(SensorValuestmp[0], SensorValuestmp[1], SensorValuestmp[2])];\n      }\n    } //Convert Location Data in 2D array\n\n\n    let DataArrayForMaps = new Array();\n\n    for (let record in SensorValuesFinal) {\n      DataArrayForMaps[record] = new Array();\n\n      for (let value in SensorValuesFinal[record]) {\n        if (value === \"latitudeValue\") {\n          DataArrayForMaps[record][\"latitude\"] = SensorValuesFinal[record][value];\n          DataArrayForMaps[record].eligible = true;\n        }\n\n        if (value === \"longitudeValue\") {\n          DataArrayForMaps[record][\"longitude\"] = SensorValuesFinal[record][value];\n          DataArrayForMaps[record].eligible = true;\n        }\n      }\n    }\n\n    this.state.MapLocs = DataArrayForMaps;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: papeilogo,\n      className: styles.papeilogo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mui_div_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      style: {\n        marginLeft: '-85%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      onClick: this.showFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Label, {\n      style: {\n        marginLeft: '-85%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }\n    }, \"Add more Filters\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginTop: '12%'\n      },\n      value: this.state.query1,\n      name: \"query1\",\n      onChange: e => {\n        let currentqueries = { ...this.state.queries\n        };\n        currentqueries[e.target.name] = e.target.value;\n        console.log(\"Current Queries\" + currentqueries);\n        this.setState({\n          queries: currentqueries,\n          query1: e.target.value\n        });\n      },\n      hintText: \"Search Value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(SelectField, {\n      floatingLabelText: \"Search By\",\n      value: this.state.columnToQuery1,\n      id: \"columnToQuery1\",\n      onChange: (event, index, value) => {\n        let currentcolumns = { ...this.state.columnsToQuery\n        };\n        console.log();\n        currentcolumns[\"columnToQuery1\"] = value;\n        this.setState({\n          columnsToQuery: currentcolumns,\n          columnToQuery1: value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'ambTempValue',\n      primaryText: \"Ambient Temperature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'latitudeValue',\n      primaryText: \"Latitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'lightValue',\n      primaryText: \"lightValue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'longitudeValue',\n      primaryText: \"Longitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'pressureValue',\n      primaryText: \"Pressure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'tags',\n      primaryText: \"Tags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'imageLabels',\n      primaryText: \"Image Labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'city',\n      primaryText: \"City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'tempValue',\n      primaryText: \"Temperature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'activity',\n      primaryText: \"Activity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'imageLabelsConfidence',\n      primaryText: \"imageLabelsConfidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginTop: '12%'\n      },\n      value: this.state.query2,\n      name: \"query2\",\n      onChange: e => {\n        let currentqueries = { ...this.state.queries\n        };\n        currentqueries[e.target.name] = e.target.value;\n        console.log(\"Current Queries\" + currentqueries);\n        this.setState({\n          queries: currentqueries,\n          query2: e.target.value\n        });\n      },\n      hintText: \"Search Value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(SelectField, {\n      floatingLabelText: \"Confidence\",\n      value: this.state.columnToQuery2,\n      inputprops: {\n        min: \"0.0\",\n        max: \"1.0\",\n        step: \"0.01\"\n      },\n      onChange: (event, index, value) => {\n        let currentcolumns = { ...this.state.columnsToQuery\n        };\n        console.log();\n        currentcolumns[\"columnToQuery2\"] = value;\n        this.setState({\n          columnsToQuery: currentcolumns,\n          columnToQuery2: value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'imageLabelsConfidence',\n      primaryText: \"imageLabelsConfidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }\n    })))), this.state.showquery3 ? /*#__PURE__*/React.createElement(FilteringComp, {\n      hideFilter: this.hideFilter,\n      changeColumn: this.ChangeFilterColumnStatus,\n      onchange: this.ChangeFilterStatus,\n      FilterNumber: \"3\",\n      columnvalue: this.state.columnToQuery3 || '',\n      queryvalue: this.state.query3 || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 279\n      }\n    }), this.state.showquery4 ? /*#__PURE__*/React.createElement(FilteringComp, {\n      hideFilter: this.hideFilter,\n      changeColumn: this.ChangeFilterColumnStatus,\n      onchange: this.ChangeFilterStatus,\n      FilterNumber: \"4\",\n      columnvalue: this.state.columnToQuery4 || '',\n      queryvalue: this.state.query4 || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 34\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 280\n      }\n    }), this.state.showquery5 ? /*#__PURE__*/React.createElement(FilteringComp, {\n      hideFilter: this.hideFilter,\n      changeColumn: this.ChangeFilterColumnStatus,\n      onchange: this.ChangeFilterStatus,\n      FilterNumber: \"5\",\n      columnvalue: this.state.columnToQuery5 || '',\n      queryvalue: this.state.query5 || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 279\n      }\n    }), /*#__PURE__*/React.createElement(DTP, {\n      onchange: this.changeDateValue,\n      onchangeTo: this.changeDateValueTo,\n      datevalue: this.state.dateFrom,\n      datevalueTo: this.state.dateTo,\n      timeTo: this.state.timeTo,\n      timevalue: this.state.timeFrom,\n      onTimeChange: this.changeTimeValue,\n      onTimeChangeTo: this.changeTimeValueTo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Mattable, {\n      updateRows: this.updateSelectedRows,\n      selectedRows: this.state.selrows,\n      data: //newresult\n      orderBy(this.state.query1 || this.state.query2 || this.state.query3 || this.state.query4 || this.state.query5 ? SensorValuesFinal.filter((x, iter) => {\n        let m = 0;\n        let j = 0;\n        let columnslength = Object.keys(this.state.columnsToQuery).length;\n        let cond1, cond2, cond3, cond4, cond5;\n        let datefrom = new Date(this.state.dateFrom);\n        let dateto = new Date(this.state.dateTo);\n        let timeFrom = new Date(this.state.timeFrom);\n        let timeTo = new Date(this.state.timeTo);\n        let fulldateto = new Date(dateto.getMonth() + 1 + \"/\" + dateto.getDate() + \"/\" + dateto.getFullYear() + \" \" + timeTo.getHours() + \":\" + timeTo.getMinutes());\n        let fulldatefrom = new Date(datefrom.getMonth() + 1 + \"/\" + datefrom.getDate() + \"/\" + datefrom.getFullYear() + \" \" + timeFrom.getHours() + \":\" + timeFrom.getMinutes());\n        let datecond = false;\n        let datefromFB = new Date(x[\"dateOfPhoto\"] + \" \" + x[\"timeOfPhoto\"]);\n        let booldatefrom = datefromFB > fulldatefrom;\n        let booldateto = datefromFB < fulldateto;\n        cond1 = false;\n        cond2 = false;\n        cond3 = false;\n        cond4 = false;\n        cond5 = false;\n\n        if (this.state.columnToQuery1 !== undefined && this.state.columnToQuery1 !== \"\" && this.state.query1 !== undefined && this.state.query1 !== \"\" && x[this.state.columnsToQuery[\"columnToQuery\" + 1]] !== undefined) {\n          //Check if include\n          if (this.state.columnsToQuery[\"columnToQuery\" + 1] === \"imageLabels\") {\n            let tagarray = this.state.queries[\"query\" + 1].split(',');\n            let Firebasetagarray = x[this.state.columnsToQuery[\"columnToQuery\" + 1]].split(',');\n            console.log(\"TAG array \" + tagarray);\n            console.log(\"Firebase Tag array \" + Firebasetagarray);\n\n            for (m = 0; m < Firebasetagarray.length; m++) {\n              if (Firebasetagarray[m] !== \"\") {\n                for (j = 0; j < tagarray.length; j++) {\n                  console.log(\"Checking \" + Firebasetagarray[m].trim() + \" with \" + tagarray[j].trim());\n\n                  if (tagarray[j] !== \"\") {\n                    if (Firebasetagarray[m].trim().includes(tagarray[j].trim())) {\n                      if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n                        console.log(\"date true\"); //return true; \n                        // cond1=true;\n\n                        if (this.state.columnsToQuery[\"columnToQuery\" + 2] === \"imageLabelsConfidence\") {\n                          console.log(x[this.state.columnsToQuery[\"columnToQuery\" + 2]]);\n                          let confidencevalue = parseFloat(this.state.queries[\"query\" + 2]);\n\n                          if (x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !== undefined) {\n                            let Firebaseconfarray = x[this.state.columnsToQuery[\"columnToQuery\" + 2]].split(',');\n                            console.log(\"checking \" + Firebaseconfarray[m] + \" with \" + confidencevalue);\n\n                            if (Firebaseconfarray[m] > confidencevalue) {\n                              cond1 = true;\n                              console.log(\"passed conftest\");\n                            }\n                          } else {\n                            cond1 = true;\n                          }\n                        }\n                      } else {\n                        console.log(\"date false\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else if (x[this.state.columnsToQuery[\"columnToQuery\" + 1]].includes(this.state.queries[\"query\" + 1])) {\n            if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n              console.log(\"date true\"); // return x[this.state.columnsToQuery[(\"columnToQuery\"+1)]].includes(this.state.queries[(\"query\"+1)])\n\n              cond1 = true;\n            } else {\n              console.log(\"date false\");\n            }\n          }\n        } //For FilterBox 2\n\n\n        if (this.state.columnToQuery2 !== undefined && this.state.columnToQuery2 !== \"\" && this.state.query2 !== undefined && this.state.query2 !== \"\" && x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !== undefined) {\n          if (this.state.columnsToQuery[\"columnToQuery\" + 2] === \"imageLabels\") {\n            let tagarray = this.state.queries[\"query\" + 2].split(',');\n            let Firebasetagarray = x[this.state.columnsToQuery[\"columnToQuery\" + 2]].split(',');\n            console.log(\"TAG array \" + tagarray);\n            console.log(\"Firebase Tag array \" + Firebasetagarray);\n\n            for (m = 0; m < Firebasetagarray.length; m++) {\n              if (Firebasetagarray[m] !== \"\") {\n                for (j = 0; j < tagarray.length; j++) {\n                  console.log(\"Checking \" + Firebasetagarray[m].trim() + \" with \" + tagarray[j].trim());\n\n                  if (tagarray[j] !== \"\") {\n                    if (Firebasetagarray[m].trim().includes(tagarray[j].trim())) {\n                      if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n                        console.log(\"date true\"); //return true;\n\n                        cond2 = true;\n                      } else {\n                        console.log(\"date false\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (x[this.state.columnsToQuery[\"columnToQuery\" + 2]].includes(this.state.queries[\"query\" + 2])) {\n            if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n              console.log(\"date true\"); //return x[this.state.columnsToQuery[(\"columnToQuery\"+2)]].includes(this.state.queries[(\"query\"+2)])\n\n              cond2 = true;\n            } else {\n              console.log(\"date false\");\n            }\n          }\n        } else {\n          cond2 = true;\n        } //For FilterBox 3\n\n\n        if (this.state.columnToQuery3 !== undefined && this.state.columnToQuery3 !== \"\" && this.state.query3 !== undefined && this.state.query3 !== \"\" && x[this.state.columnsToQuery[\"columnToQuery\" + 3]] !== undefined) {\n          if (this.state.columnsToQuery[\"columnToQuery\" + 3] === \"imageLabels\") {\n            let tagarray = this.state.queries[\"query\" + 3].split(',');\n            let Firebasetagarray = x[this.state.columnsToQuery[\"columnToQuery\" + 3]].split(',');\n            console.log(\"TAG array \" + tagarray);\n            console.log(\"Firebase Tag array \" + Firebasetagarray);\n\n            for (m = 0; m < Firebasetagarray.length; m++) {\n              if (Firebasetagarray[m] !== \"\") {\n                for (j = 0; j < tagarray.length; j++) {\n                  console.log(\"Checking \" + Firebasetagarray[m].trim() + \" with \" + tagarray[j].trim());\n\n                  if (tagarray[j] !== \"\") {\n                    if (Firebasetagarray[m].trim().includes(tagarray[j].trim())) {\n                      if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n                        console.log(\"date true\"); //  return true;\n                        // cond3=true;\n\n                        if (this.state.columnsToQuery[\"columnToQuery\" + 2] === \"imageLabelsConfidence\") {\n                          console.log(x[this.state.columnsToQuery[\"columnToQuery\" + 2]]);\n                          let confidencevalue = parseFloat(this.state.queries[\"query\" + 2]);\n\n                          if (x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !== undefined) {\n                            let Firebaseconfarray = x[this.state.columnsToQuery[\"columnToQuery\" + 2]].split(',');\n                            console.log(\"checking \" + Firebaseconfarray[m] + \" with \" + confidencevalue);\n\n                            if (Firebaseconfarray[m] > confidencevalue) {\n                              cond3 = true;\n                              console.log(\"passed conftest\");\n                            }\n                          } else {\n                            cond3 = true;\n                          }\n                        }\n                      } else {\n                        console.log(\"date false\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (x[this.state.columnsToQuery[\"columnToQuery\" + 3]].includes(this.state.queries[\"query\" + 3])) {\n            if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n              console.log(\"date true\"); // return x[this.state.columnsToQuery[(\"columnToQuery\"+3)]].includes(this.state.queries[(\"query\"+3)])\n\n              cond3 = true;\n            } else {\n              console.log(\"date false\");\n            }\n          }\n        } else {\n          cond3 = true;\n        } //For FilterBox 4\n\n\n        if (this.state.columnToQuery4 !== undefined && this.state.columnToQuery4 !== \"\" && this.state.query4 !== undefined && this.state.query4 !== \"\" && x[this.state.columnsToQuery[\"columnToQuery\" + 4]] !== undefined) {\n          if (this.state.columnsToQuery[\"columnToQuery\" + 4] === \"imageLabels\") {\n            let tagarray = this.state.queries[\"query\" + 4].split(',');\n            let Firebasetagarray = x[this.state.columnsToQuery[\"columnToQuery\" + 4]].split(',');\n            console.log(\"TAG array \" + tagarray);\n            console.log(\"Firebase Tag array \" + Firebasetagarray);\n\n            for (m = 0; m < Firebasetagarray.length; m++) {\n              if (Firebasetagarray[m] !== \"\") {\n                for (j = 0; j < tagarray.length; j++) {\n                  console.log(\"Checking \" + Firebasetagarray[m].trim() + \" with \" + tagarray[j].trim());\n\n                  if (tagarray[j] !== \"\") {\n                    if (Firebasetagarray[m].trim().includes(tagarray[j].trim())) {\n                      if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n                        console.log(\"date true\"); // return true;\n                        //cond4=true;\n\n                        if (this.state.columnsToQuery[\"columnToQuery\" + 2] === \"imageLabelsConfidence\") {\n                          console.log(x[this.state.columnsToQuery[\"columnToQuery\" + 2]]);\n                          let confidencevalue = parseFloat(this.state.queries[\"query\" + 2]);\n\n                          if (x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !== undefined) {\n                            let Firebaseconfarray = x[this.state.columnsToQuery[\"columnToQuery\" + 2]].split(',');\n                            console.log(\"checking \" + Firebaseconfarray[m] + \" with \" + confidencevalue);\n\n                            if (Firebaseconfarray[m] > confidencevalue) {\n                              cond4 = true;\n                              console.log(\"passed conftest\");\n                            }\n                          } else {\n                            cond4 = true;\n                          }\n                        }\n                      } else {\n                        console.log(\"date false\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (x[this.state.columnsToQuery[\"columnToQuery\" + 4]].includes(this.state.queries[\"query\" + 4])) {\n            console.log(this.state.columnsToQuery[\"columnToQuery\" + 4]);\n            console.log(this.state.queries[\"query\" + 4]);\n\n            if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n              console.log(\"date true\"); // return x[this.state.columnsToQuery[(\"columnToQuery\"+4)]].includes(this.state.queries[(\"query\"+4)])\n\n              cond4 = true;\n            } else {\n              console.log(\"date false\");\n            }\n          }\n        } else {\n          console.log(\"cond 4 undefined\");\n          cond4 = true;\n        } //For FilterBox 5\n\n\n        if (this.state.columnToQuery5 !== undefined && this.state.columnToQuery5 !== \"\" && this.state.query5 !== undefined && this.state.query5 !== \"\" && x[this.state.columnsToQuery[\"columnToQuery\" + 5]] !== undefined) {\n          if (this.state.columnsToQuery[\"columnToQuery\" + 5] === \"imageLabels\") {\n            let tagarray = this.state.queries[\"query\" + 5].split(',');\n            let Firebasetagarray = x[this.state.columnsToQuery[\"columnToQuery\" + 5]].split(',');\n            console.log(\"TAG array \" + tagarray);\n            console.log(\"Firebase Tag array \" + Firebasetagarray);\n            let i = 0;\n\n            for (m = 0; m < Firebasetagarray.length; m++) {\n              if (Firebasetagarray[m] !== \"\") {\n                for (j = 0; j < tagarray.length; j++) {\n                  console.log(\"Checking \" + Firebasetagarray[m].trim() + \" with \" + tagarray[j].trim());\n\n                  if (tagarray[j] !== \"\") {\n                    if (Firebasetagarray[m].trim().includes(tagarray[j].trim())) {\n                      if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n                        console.log(\"date true\"); // return true;\n                        //cond5=true;\n\n                        if (this.state.columnsToQuery[\"columnToQuery\" + 2] === \"imageLabelsConfidence\") {\n                          console.log(x[this.state.columnsToQuery[\"columnToQuery\" + 2]]);\n                          let confidencevalue = parseFloat(this.state.queries[\"query\" + 2]);\n\n                          if (x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !== undefined) {\n                            let Firebaseconfarray = x[this.state.columnsToQuery[\"columnToQuery\" + 2]].split(',');\n                            console.log(\"checking \" + Firebaseconfarray[m] + \" with \" + confidencevalue);\n\n                            if (Firebaseconfarray[m] > confidencevalue) {\n                              cond5 = true;\n                              console.log(\"passed conftest\");\n                            }\n                          } else {\n                            cond5 = true;\n                          }\n                        }\n                      } else {\n                        console.log(\"date false\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (x[this.state.columnsToQuery[\"columnToQuery\" + 5]].includes(this.state.queries[\"query\" + 5])) {\n            if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n              console.log(\"date true\"); // return x[this.state.columnsToQuery[(\"columnToQuery\"+5)]].includes(this.state.queries[(\"query\"+5)])\n\n              cond5 = true;\n            } else {\n              console.log(\"date false\");\n            }\n          }\n        } else {\n          cond5 = true;\n        }\n\n        if (cond1 && cond2 && cond3 && cond4 & cond5) {\n          this.state.MapLocs[iter].eligible = true;\n          console.log(this.state.MapLocs); // console.log(this.state.posremove)\n\n          return true;\n        } else {\n          this.state.MapLocs[iter].eligible = false; // this.state.posremove.push(iter);\n        }\n      }) : SensorValuesFinal),\n      header: [{\n        name: \"User\",\n        prop: \"user\"\n      }, {\n        name: \"ambTempValue\",\n        prop: \"ambTempValue\"\n      }, {\n        name: \"latitudeValue\",\n        prop: \"latitudeValue\"\n      }, {\n        name: \"lightValue\",\n        prop: \"lightValue\"\n      }, {\n        name: \"longitudeValue\",\n        prop: \"longitudeValue\"\n      }, {\n        name: \"pressureValue\",\n        prop: \"pressureValue\"\n      }, {\n        name: \"Tags\",\n        prop: \"tags\"\n      }, {\n        name: \"ImageLabels\",\n        prop: \"imageLabels\"\n      }, {\n        name: \"Day Of Photo\",\n        prop: \"dateOfPhoto\"\n      }, {\n        name: \"City\",\n        prop: \"city\"\n      }, {\n        name: \"Temperature\",\n        prop: \"tempValue\"\n      }, {\n        name: \"Activity\",\n        prop: \"activity\"\n      }, {\n        name: \"LabelsConfidence\",\n        prop: \"imageLabelsConfidence\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Gmaps, {\n      style: {\n        margintop: \"100px\"\n      },\n      markers: this.state.Mapsarray,\n      showonmap: () => this.viewOnMaps(this.state.NewMapLocs),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Makjin/Documents/ptuxiakh/React_ModalImage/src/App.js"],"names":["React","Component","MuiThemeProvider","FirebaseConfig","Firebase","SelectField","MenuItem","TextField","Fab","AddIcon","orderBy","Divider","Form","Label","FilteringComp","concat","DTP","Mattable","Gmaps","styles","papeilogo","App","constructor","props","getUserData","state","loaded","ref","database","on","snapshot","val","console","log","setState","FirebaseData","ChangeFilterStatus","e","currentqueries","queries","queryname","target","name","value","ChangeFilterColumnStatus","event","index","FilterNumber","currentcolumns","columnsToQuery","Columntoquery","hideFilter","queryToHide","query","numberoffilters","showFilter","showquery3","showquery4","showquery5","changeDateValue","date","dateFrom","changeDateValueTo","dateTo","changeTimeValue","time","timeFrom","changeTimeValueTo","timeTo","updateSelectedRows","rows","selrows","viewOnMaps","Mapsarray","temparr","tempMaps","MapLocs","posremove","positionschanged","pos","eligible","push","removeValFromIndex","i","length","splice","marker","NewMapLocs","apps","firebaseApp","initializeApp","SensorValues","query1","query2","query3","query4","query5","query6","columnToQuery1","columnToQuery2","columnToQuery3","columnToQuery4","columnToQuery5","columnToQuery6","componentDidMount","componentDidUpdate","render","SensorValuestmp","SensorValuesFinal","user","record","Object","keys","map","x","assign","DataArrayForMaps","Array","marginLeft","marginTop","min","max","step","filter","iter","m","j","columnslength","cond1","cond2","cond3","cond4","cond5","datefrom","Date","dateto","fulldateto","getMonth","getDate","getFullYear","getHours","getMinutes","fulldatefrom","datecond","datefromFB","booldatefrom","booldateto","undefined","tagarray","split","Firebasetagarray","trim","includes","confidencevalue","parseFloat","Firebaseconfarray","prop","margintop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport FirebaseConfig from './firebaseconfig'\r\nimport Firebase from \"firebase\"\r\nimport SelectField from 'material-ui/SelectField';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport TextField from 'material-ui/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport orderBy from 'lodash.orderby'\r\nimport { Divider, Form, Label } from 'semantic-ui-react'\r\nimport './FlexBox.css'\r\nimport FilteringComp from './FIlteringomponent'\r\nimport { concat } from 'bytebuffer';\r\nimport DTP from './DateTimePick'\r\nimport Mattable from './newmattable'\r\nimport Gmaps from './Gmaps'\r\nimport styles from './styles.module.css'\r\nimport papeilogo from './images/papei-logo.jpg'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (!Firebase.apps.length) {\r\n     const firebaseApp = Firebase.initializeApp(FirebaseConfig);\r\n    }\r\n  this.state = {\r\n\r\n    SensorValues:[],\r\n\r\n    //State Variable for Firebase Data\r\n    FirebaseData:[],\r\n\r\n    //User Input for Filtering\r\n    query1:'',\r\n    query2:'',\r\n    query3:'',\r\n    query4:'',\r\n    query5:'',\r\n    query6:'',\r\n    queries:[],\r\n\r\n    //Number Of Columns for Filtering\r\n    columnToQuery1:'',\r\n    columnToQuery2:'',\r\n    columnToQuery3:'',\r\n    columnToQuery4:'',\r\n    columnToQuery5:'',\r\n    columnToQuery6:'',\r\n    columnsToQuery:[],\r\n    numberoffilters:2,\r\n    showquery3:false,\r\n    showquery4:false,\r\n    showquery5:false,\r\n\r\n    //Initialized Timestamps\r\n    dateFrom:'2019-09-18T21:11:57',\r\n    dateTo:'2020-02-18T21:11:57',\r\n    timeFrom:'2019-08-18T21:11:54',\r\n    timeTo:'2019-08-18T21:11:53',\r\n    selrows : [],\r\n    MapLocs : [],\r\n    Mapsarray : [],\r\n    NewMapLocs : [],\r\n    posremove : [],\r\n    loaded : false,\r\n  };}\r\n\r\n  componentDidMount() {\r\n    if(!this.state.loaded)\r\n    {\r\n      this.getUserData();\r\n\r\n      console.log(this.state.loaded);\r\n    }\r\n  }\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  //Get Data From Firebase\r\n  getUserData = () => {\r\n    if(!this.state.loaded)\r\n    { \r\n    let ref = Firebase.database().ref(\"/SensorFoo/\");\r\n    ref.on(\"value\", snapshot => {\r\n      const state = snapshot.val();\r\n      console.log(this.state.loaded)\r\n\r\n        this.setState({loaded : true}); \r\n        console.log(this.state.loaded);\r\n        this.setState({FirebaseData : state});\r\n      \r\n\r\n\r\n    });\r\n  }};\r\n\r\n  //User Input Change\r\n ChangeFilterStatus = (e) => {\r\n  let currentqueries = {...this.state.queries}\r\n  let queryname = e.target.name\r\n  currentqueries[e.target.name] = e.target.value\r\n  console.log(\"Current Queries\" + currentqueries)\r\n  console.log(\"e target name\"+e.target.name)\r\n  this.setState({ queries: currentqueries ,[queryname]:e.target.value})\r\n }\r\n\r\n //Filter Type Change\r\n ChangeFilterColumnStatus = (event,index,value,FilterNumber) =>\r\n { \r\n\r\n    let currentcolumns = {...this.state.columnsToQuery}\r\n    let Columntoquery = \"columnToQuery\"+FilterNumber;\r\n    currentcolumns[\"columnToQuery\"+FilterNumber] = value\r\n    this.setState({ columnsToQuery: currentcolumns ,[Columntoquery]:value})\r\n  //   this.setState({columnToQuery1 : value,\r\n  // columnsToQuery : [...this.state.columnsToQuery,value]})\r\n}\r\n\r\n//Hide Extra Filters\r\nhideFilter = (queryToHide) => {\r\nlet query = \"showquery\"+queryToHide;\r\nthis.setState((state) => (  // this is the current state\r\n  { \r\n    numberoffilters: (state.numberoffilters)-1, // this will be the previous randomNumber\r\n    [query]:false\r\n   \r\n }));\r\n console.log(this.state.numberoffilters);\r\n}\r\n\r\n//Display 3rd,4th or 5th filtering\r\nshowFilter = ()=>{\r\n  \r\n  this.setState((state) => (  // this is the current state\r\n    { \r\n      numberoffilters: (state.numberoffilters)+1, // this will be the previous randomNumber\r\n      showquery3: (this.state.numberoffilters+1)>=3 ? true : false,\r\n      showquery4: (this.state.numberoffilters+1)>=4 ? true : false,\r\n      showquery5: (this.state.numberoffilters+1)>=5 ? true : false\r\n   }));\r\n}\r\n\r\n//Change Date Value From\r\nchangeDateValue = (date) => {\r\nthis.setState((state)=>(\r\n  {\r\n  dateFrom: date\r\n}))\r\nconsole.log(this.state.dateFrom)\r\n}\r\n//Change Date Value To\r\nchangeDateValueTo = (date) => {\r\n  this.setState((state)=>(\r\n    {\r\n    dateTo: date\r\n  }))\r\n  }\r\n\r\n  //Change Time Value From\r\nchangeTimeValue = (time) => {\r\n\r\n  this.setState((state)=>(\r\n    {\r\n    timeFrom: time\r\n  }))\r\n  }\r\n  //Change Time Value To\r\n  changeTimeValueTo = (time) => {\r\n    console.log(time);\r\n    this.setState((state)=>(\r\n      {\r\n      timeTo: time\r\n    }))\r\n    }\r\n    updateSelectedRows = rows => {\r\n      console.log(rows)\r\n      this.setState(state=> ({\r\n        selrows:rows\r\n      }))\r\n    }\r\n    //View Rows on Google Maps\r\n  viewOnMaps = e => {\r\n    this.state.Mapsarray = [];\r\n    let temparr = [];\r\n    let tempMaps = this.state.MapLocs;\r\n    this.state.posremove = [];\r\n   let positionschanged=false\r\n    console.log(this.state.selrows)\r\n    console.log(this.state.MapLocs[this.state.selrows])\r\n    console.log(this.state.Mapsarray)\r\n   \r\n    for(let pos in this.state.MapLocs){\r\n      if(!this.state.MapLocs[pos].eligible){\r\n        this.state.posremove.push(pos)\r\n        positionschanged=true;\r\n      }\r\n     \r\n    //  this.state.Mapsarray.push(e[this.state.selrows[marker]])   \r\n    }\r\n   \r\n    console.log(this.state.posremove)\r\n   let removeValFromIndex = this.state.posremove;  \r\n\r\nfor (var i = removeValFromIndex.length -1; i >= 0; i--){\r\n   this.state.MapLocs.splice(removeValFromIndex[i],1);\r\n}\r\nconsole.log(this.state.MapLocs)\r\nfor(let marker in this.state.selrows){\r\n  console.log(this.state.selrows[marker])\r\n  temparr.push(this.state.MapLocs[this.state.selrows[marker]])\r\n//  this.state.Mapsarray.push(e[this.state.selrows[marker]])\r\n  \r\n}\r\nif(!positionschanged)\r\n  { this.setState(state=>({\r\n     Mapsarray : temparr,\r\n     NewMapLocs : this.state.MapLocs\r\n   }))\r\n    console.log(this.state.Mapsarray);}\r\nelse{\r\n  this.setState(state=>({\r\n    Mapsarray : this.state.MapLocs,\r\n    NewMapLocs : this.state.MapLocs\r\n  }))\r\n   console.log(this.state.Mapsarray);\r\n}\r\n  }\r\n  render() {\r\n\r\n    var SensorValuestmp=[];\r\n    let SensorValuesFinal=[];\r\n    var SensorValues = this.state.FirebaseData;\r\n    console.log(this.state);\r\n\r\nfor(let user in SensorValues){\r\n  for(let record in SensorValues[user]){\r\n    SensorValuestmp=[];\r\n    Object.keys(SensorValues[user][record]).map((x)=>{\r\n      SensorValuestmp.push(SensorValues[user][record][x])\r\n     \r\n    })\r\n    SensorValuestmp.push(SensorValues[user][record][\"test\"])\r\n    SensorValuesFinal = [...SensorValuesFinal,Object.assign(SensorValuestmp[0], SensorValuestmp[1],SensorValuestmp[2])];\r\n\r\n  }\r\n \r\n}\r\n\r\n//Convert Location Data in 2D array\r\nlet DataArrayForMaps = new Array();\r\nfor(let record in SensorValuesFinal){\r\n  DataArrayForMaps[record] = new Array();\r\n  for(let value in SensorValuesFinal[record]){\r\n\r\n    if(value === \"latitudeValue\"){\r\n      DataArrayForMaps[record][\"latitude\"] = SensorValuesFinal[record][value]\r\n      DataArrayForMaps[record].eligible=true;\r\n    }\r\n    if(value ===\"longitudeValue\"){\r\n      DataArrayForMaps[record][\"longitude\"] = SensorValuesFinal[record][value]\r\n      DataArrayForMaps[record].eligible=true;\r\n    }\r\n    }\r\n  }\r\nthis.state.MapLocs = DataArrayForMaps\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-header\">\r\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n          <img src={papeilogo} className={styles.papeilogo} />\r\n          {/* <h2>Welcome to React</h2> */}\r\n        </div>\r\n        <p className=\"App-intro\">\r\n          {/* To get started, edit <code>src/App.js</code> and save to reload. */}\r\n        </p>\r\n        <MuiThemeProvider>\r\n          <div className=\"mui_div_wrapper\">\r\n          <div>\r\n        <Fab color=\"primary\" aria-label=\"add\"  style={{marginLeft:'-85%'}}>\r\n        <AddIcon onClick={this.showFilter} />\r\n        \r\n      </Fab>\r\n      </div>\r\n      <Label style={{marginLeft:'-85%'}}>Add more Filters</Label>\r\n          <div className=\"flex-container\">\r\n            <div>\r\n        <TextField style={{marginTop: '12%'  }}\r\n        value={this.state.query1}\r\n        name=\"query1\"\r\n        onChange={e=>{\r\n           let currentqueries = {...this.state.queries}\r\n           currentqueries[e.target.name] = e.target.value\r\n           console.log(\"Current Queries\" + currentqueries)\r\n           this.setState({ queries: currentqueries ,query1:e.target.value}\r\n        )}}\r\n      hintText=\"Search Value\"\r\n    /></div>\r\n    <div >\r\n        <SelectField \r\n          floatingLabelText=\"Search By\"\r\n          value={this.state.columnToQuery1}\r\n          id=\"columnToQuery1\"\r\n          onChange={(event,index,value) =>\r\n            { \r\n              let currentcolumns = {...this.state.columnsToQuery}\r\n              console.log()\r\n              currentcolumns[(\"columnToQuery1\")] = value\r\n              this.setState({ columnsToQuery: currentcolumns ,columnToQuery1:value})\r\n          }}\r\n        >\r\n          <MenuItem value={'ambTempValue'} primaryText=\"Ambient Temperature\" />\r\n          <MenuItem value={'latitudeValue'} primaryText=\"Latitude\" />\r\n          <MenuItem value={'lightValue'} primaryText=\"lightValue\" />\r\n          <MenuItem value={'longitudeValue'} primaryText=\"Longitude\" />\r\n          <MenuItem value={'pressureValue'} primaryText=\"Pressure\" />\r\n          <MenuItem value={'tags'} primaryText=\"Tags\" />\r\n          <MenuItem value={'imageLabels'} primaryText=\"Image Labels\" />\r\n          <MenuItem value={'city'} primaryText=\"City\" />\r\n          <MenuItem value={'tempValue'} primaryText=\"Temperature\" />\r\n          <MenuItem value={'activity'} primaryText=\"Activity\" />\r\n          <MenuItem value={'imageLabelsConfidence'} primaryText=\"imageLabelsConfidence\" />\r\n        </SelectField>\r\n        </div>\r\n        </div>\r\n        <div className=\"flex-container\">\r\n            <div>\r\n        <TextField style={{marginTop: '12%'  }}\r\n        value={this.state.query2}\r\n        name=\"query2\"\r\n        onChange={e=>{\r\n          let currentqueries = {...this.state.queries}\r\n          currentqueries[e.target.name] = e.target.value\r\n          console.log(\"Current Queries\" + currentqueries)\r\n          this.setState({ queries: currentqueries ,query2:e.target.value}\r\n       )}}\r\n      hintText=\"Search Value\"\r\n    /></div>\r\n    <div>\r\n        <SelectField\r\n          floatingLabelText=\"Confidence\"\r\n          value={this.state.columnToQuery2}\r\n          inputprops={{ min: \"0.0\", max: \"1.0\", step: \"0.01\" }}\r\n          onChange={(event,index,value) =>\r\n            { \r\n              let currentcolumns = {...this.state.columnsToQuery}\r\n              console.log()\r\n              currentcolumns[(\"columnToQuery2\")] = value\r\n              this.setState({ columnsToQuery: currentcolumns ,columnToQuery2:value})\r\n\r\n          }}\r\n        >\r\n\r\n          <MenuItem value={'imageLabelsConfidence'} primaryText=\"imageLabelsConfidence\" />\r\n        </SelectField>\r\n        </div>\r\n\r\n        \r\n        </div>\r\n       {this.state.showquery3 ? <FilteringComp hideFilter={this.hideFilter} changeColumn = {this.ChangeFilterColumnStatus} onchange={this.ChangeFilterStatus} FilterNumber=\"3\" columnvalue ={this.state.columnToQuery3 || ''} queryvalue={this.state.query3 || ''}></FilteringComp> : <span></span>}\r\n        {this.state.showquery4 ? <FilteringComp hideFilter={this.hideFilter} changeColumn = {this.ChangeFilterColumnStatus} onchange={this.ChangeFilterStatus} FilterNumber=\"4\" columnvalue ={this.state.columnToQuery4 || ''} queryvalue={this.state.query4 || ''}></FilteringComp> : <span></span>}\r\n        {this.state.showquery5 ?<FilteringComp hideFilter={this.hideFilter} changeColumn = {this.ChangeFilterColumnStatus} onchange={this.ChangeFilterStatus} FilterNumber=\"5\" columnvalue ={this.state.columnToQuery5 || ''} queryvalue={this.state.query5 || ''}></FilteringComp> : <span></span>}\r\n       {/* <DateTimePick dateFrom={this.dateFrom} dateTo={this.dateTo} timeFrom={this.timeFrom} timeTo={this.timeTo}/> */}\r\n          \r\n       <DTP onchange={this.changeDateValue} onchangeTo={this.changeDateValueTo} datevalue={this.state.dateFrom} datevalueTo={this.state.dateTo} timeTo={this.state.timeTo} timevalue={this.state.timeFrom} onTimeChange={this.changeTimeValue} onTimeChangeTo={this.changeTimeValueTo}/>\r\n\r\n        {}\r\n          <Mattable\r\n           updateRows={this.updateSelectedRows}\r\n           selectedRows={this.state.selrows}\r\n            data={//newresult\r\n              orderBy(\r\n                (this.state.query1 || this.state.query2 || this.state.query3 || this.state.query4 || this.state.query5)\r\n                  ? SensorValuesFinal.filter((x,iter) =>\r\n                    {\r\n                      \r\n                      let m=0;\r\n                      let j=0;\r\n                      let columnslength = (Object.keys(this.state.columnsToQuery).length)\r\n                      let cond1,cond2,cond3,cond4,cond5;\r\n                      let datefrom = new Date(this.state.dateFrom)\r\n                      let dateto = new Date(this.state.dateTo)\r\n                      let timeFrom = new Date(this.state.timeFrom)\r\n                      let timeTo = new Date(this.state.timeTo)\r\n                      let fulldateto = new Date((dateto.getMonth()+1)+\"/\"+dateto.getDate()+\"/\"+dateto.getFullYear()+\" \"+timeTo.getHours()+\":\"+timeTo.getMinutes())\r\n                      let fulldatefrom = new Date((datefrom.getMonth()+1)+\"/\"+datefrom.getDate()+\"/\"+datefrom.getFullYear()+\" \"+timeFrom.getHours()+\":\"+timeFrom.getMinutes())\r\n\r\n                      let datecond=false;\r\n                      let datefromFB= new Date(x[\"dateOfPhoto\"]+\" \"+x[\"timeOfPhoto\"])\r\n                      let booldatefrom = datefromFB>fulldatefrom;\r\n                      let booldateto = datefromFB<fulldateto;\r\n\r\n\r\n                      cond1=false;\r\n                      cond2=false;\r\n                      cond3=false;\r\n                      cond4=false;\r\n                      cond5=false;\r\n                 if(this.state.columnToQuery1!==undefined && this.state.columnToQuery1 !==\"\" && this.state.query1!==undefined && this.state.query1 !==\"\" && x[this.state.columnsToQuery[(\"columnToQuery\"+1)]]!==undefined){\r\n                   //Check if include\r\n                   if(this.state.columnsToQuery[(\"columnToQuery\"+1)]===\"imageLabels\")\r\n                   {\r\n                     let tagarray =(this.state.queries[(\"query\"+1)]).split(',');\r\n                     let Firebasetagarray = x[this.state.columnsToQuery[(\"columnToQuery\"+1)]].split(',');\r\n                     console.log(\"TAG array \"+tagarray)\r\n                     console.log(\"Firebase Tag array \"+Firebasetagarray)\r\n                    \r\n                     for(m=0;m<Firebasetagarray.length;m++){\r\n                      if(Firebasetagarray[m]!==\"\"){\r\n                      for(j=0;j<tagarray.length;j++)\r\n                      {\r\n                        console.log(\"Checking \"+Firebasetagarray[m].trim()+\" with \"+tagarray[j].trim());\r\n                     if(tagarray[j]!==\"\"){if(Firebasetagarray[m].trim().includes(tagarray[j].trim())){\r\n                      if(datefromFB>fulldatefrom && datefromFB<fulldateto){\r\n                        console.log(\"date true\")\r\n                        //return true; \r\n                       // cond1=true;\r\n                        if(this.state.columnsToQuery[(\"columnToQuery\"+2)]===\"imageLabelsConfidence\")\r\n                      {\r\n                        console.log(x[this.state.columnsToQuery[(\"columnToQuery\"+2)]])\r\n                        let confidencevalue = parseFloat(this.state.queries[(\"query\"+2)])\r\n                        if(x[this.state.columnsToQuery[(\"columnToQuery\"+2)]]!==undefined)\r\n                        {let Firebaseconfarray = x[this.state.columnsToQuery[(\"columnToQuery\"+2)]].split(',');\r\n                        console.log(\"checking \"+Firebaseconfarray[m]+\" with \"+confidencevalue)\r\n                         if(Firebaseconfarray[m]>confidencevalue)\r\n                         {cond1=true;\r\n                         console.log(\"passed conftest\")}\r\n                         \r\n\r\n                      }else{cond1=true;}}\r\n                      }\r\n                      else{\r\n                        console.log(\"date false\")\r\n                      }\r\n                     }}}\r\n                      }\r\n                  }}             \r\n                  else if(x[this.state.columnsToQuery[(\"columnToQuery\"+1)]].includes(this.state.queries[(\"query\"+1)]))\r\n                   {\r\n                    if(datefromFB>fulldatefrom && datefromFB<fulldateto){\r\n                      console.log(\"date true\")\r\n                     // return x[this.state.columnsToQuery[(\"columnToQuery\"+1)]].includes(this.state.queries[(\"query\"+1)])\r\n                     cond1=true;\r\n                    }\r\n                    else{\r\n                      console.log(\"date false\")\r\n                    }\r\n                  }\r\n                  }\r\n                   //For FilterBox 2\r\n                 if(this.state.columnToQuery2!==undefined && this.state.columnToQuery2 !==\"\" && this.state.query2!==undefined && this.state.query2 !==\"\" && x[this.state.columnsToQuery[(\"columnToQuery\"+2)]]!==undefined){\r\n                  if(this.state.columnsToQuery[(\"columnToQuery\"+2)]===\"imageLabels\")\r\n                  {\r\n                    let tagarray =(this.state.queries[(\"query\"+2)]).split(',');\r\n                    let Firebasetagarray = x[this.state.columnsToQuery[(\"columnToQuery\"+2)]].split(',');\r\n                    console.log(\"TAG array \"+tagarray)\r\n                    console.log(\"Firebase Tag array \"+Firebasetagarray)\r\n                   \r\n                    for(m=0;m<Firebasetagarray.length;m++){\r\n                     if(Firebasetagarray[m]!==\"\"){\r\n                     for(j=0;j<tagarray.length;j++)\r\n                     {\r\n                       console.log(\"Checking \"+Firebasetagarray[m].trim()+\" with \"+tagarray[j].trim());\r\n                    if(tagarray[j]!==\"\"){if(Firebasetagarray[m].trim().includes(tagarray[j].trim()))\r\n                     { if(datefromFB>fulldatefrom && datefromFB<fulldateto){\r\n                      console.log(\"date true\")\r\n                      //return true;\r\n                     cond2=true;\r\n                      \r\n                    }\r\n                    else{\r\n                      console.log(\"date false\")\r\n                    }}\r\n                    }}\r\n                     }\r\n                 }}\r\n                \r\n                 if(x[this.state.columnsToQuery[(\"columnToQuery\"+2)]].includes(this.state.queries[(\"query\"+2)]))\r\n                 {\r\n                  if(datefromFB>fulldatefrom && datefromFB<fulldateto){\r\n                    console.log(\"date true\")\r\n                    //return x[this.state.columnsToQuery[(\"columnToQuery\"+2)]].includes(this.state.queries[(\"query\"+2)])\r\n                    cond2=true;\r\n                    \r\n                  }\r\n                  else{\r\n                    console.log(\"date false\")\r\n                  }\r\n                }}else{cond2=true;}\r\n                  //For FilterBox 3\r\n                 if(this.state.columnToQuery3!==undefined && this.state.columnToQuery3 !==\"\" && this.state.query3!==undefined && this.state.query3 !==\"\" && x[this.state.columnsToQuery[(\"columnToQuery\"+3)]]!==undefined){\r\n                  if(this.state.columnsToQuery[(\"columnToQuery\"+3)]===\"imageLabels\")\r\n                  {\r\n                    let tagarray =(this.state.queries[(\"query\"+3)]).split(',');\r\n                    let Firebasetagarray = x[this.state.columnsToQuery[(\"columnToQuery\"+3)]].split(',');\r\n                    console.log(\"TAG array \"+tagarray)\r\n                    console.log(\"Firebase Tag array \"+Firebasetagarray)\r\n                   \r\n                    for(m=0;m<Firebasetagarray.length;m++){\r\n                     if(Firebasetagarray[m]!==\"\"){\r\n                     for(j=0;j<tagarray.length;j++)\r\n                     {\r\n                       console.log(\"Checking \"+Firebasetagarray[m].trim()+\" with \"+tagarray[j].trim());\r\n                    if(tagarray[j]!==\"\"){if(Firebasetagarray[m].trim().includes(tagarray[j].trim()))\r\n                      {if(datefromFB>fulldatefrom && datefromFB<fulldateto){\r\n                        console.log(\"date true\")\r\n                      //  return true;\r\n                     // cond3=true;\r\n                      if(this.state.columnsToQuery[(\"columnToQuery\"+2)]===\"imageLabelsConfidence\")\r\n                      {\r\n                        console.log(x[this.state.columnsToQuery[(\"columnToQuery\"+2)]])\r\n                        let confidencevalue = parseFloat(this.state.queries[(\"query\"+2)])\r\n                        if(x[this.state.columnsToQuery[(\"columnToQuery\"+2)]]!==undefined)\r\n                        {let Firebaseconfarray = x[this.state.columnsToQuery[(\"columnToQuery\"+2)]].split(',');\r\n                        console.log(\"checking \"+Firebaseconfarray[m]+\" with \"+confidencevalue)\r\n                         if(Firebaseconfarray[m]>confidencevalue)\r\n                         {cond3=true;\r\n                         console.log(\"passed conftest\")}\r\n                         \r\n\r\n                      }else{cond3=true;}}\r\n                      }\r\n                      else{\r\n                        console.log(\"date false\")\r\n                      }}\r\n                    }}\r\n                     }\r\n                 }}\r\n                 if(x[this.state.columnsToQuery[(\"columnToQuery\"+3)]].includes(this.state.queries[(\"query\"+3)]))\r\n                 {\r\n                  if(datefromFB>fulldatefrom && datefromFB<fulldateto){\r\n                    console.log(\"date true\")\r\n                   // return x[this.state.columnsToQuery[(\"columnToQuery\"+3)]].includes(this.state.queries[(\"query\"+3)])\r\n                   cond3=true;\r\n                  }\r\n                  else{\r\n                    console.log(\"date false\")\r\n                  }\r\n                }\r\n                }else{cond3=true;}\r\n                  //For FilterBox 4\r\n                 if(this.state.columnToQuery4!==undefined && this.state.columnToQuery4 !==\"\" && this.state.query4!==undefined && this.state.query4 !==\"\" && x[this.state.columnsToQuery[(\"columnToQuery\"+4)]]!==undefined){\r\n                  if(this.state.columnsToQuery[(\"columnToQuery\"+4)]===\"imageLabels\")\r\n                  {\r\n                    let tagarray =(this.state.queries[(\"query\"+4)]).split(',');\r\n                    let Firebasetagarray = x[this.state.columnsToQuery[(\"columnToQuery\"+4)]].split(',');\r\n                    console.log(\"TAG array \"+tagarray)\r\n                    console.log(\"Firebase Tag array \"+Firebasetagarray)\r\n                   \r\n                    for(m=0;m<Firebasetagarray.length;m++){\r\n                     if(Firebasetagarray[m]!==\"\"){\r\n                     for(j=0;j<tagarray.length;j++)\r\n                     {\r\n                       console.log(\"Checking \"+Firebasetagarray[m].trim()+\" with \"+tagarray[j].trim());\r\n                    if(tagarray[j]!==\"\"){if(Firebasetagarray[m].trim().includes(tagarray[j].trim()))\r\n                      {if(datefromFB>fulldatefrom && datefromFB<fulldateto){\r\n                        console.log(\"date true\")\r\n                       // return true;\r\n                       //cond4=true;\r\n                       if(this.state.columnsToQuery[(\"columnToQuery\"+2)]===\"imageLabelsConfidence\")\r\n                       {\r\n                         console.log(x[this.state.columnsToQuery[(\"columnToQuery\"+2)]])\r\n                         let confidencevalue = parseFloat(this.state.queries[(\"query\"+2)])\r\n                         if(x[this.state.columnsToQuery[(\"columnToQuery\"+2)]]!==undefined)\r\n                         {let Firebaseconfarray = x[this.state.columnsToQuery[(\"columnToQuery\"+2)]].split(',');\r\n                         console.log(\"checking \"+Firebaseconfarray[m]+\" with \"+confidencevalue)\r\n                          if(Firebaseconfarray[m]>confidencevalue)\r\n                          {cond4=true;\r\n                          console.log(\"passed conftest\")}\r\n                          \r\n \r\n                       }else{cond4=true;}}\r\n                      }\r\n                      else{\r\n                        console.log(\"date false\")\r\n                      }}\r\n                    }}\r\n                     }\r\n                 }}\r\n                 if(x[this.state.columnsToQuery[(\"columnToQuery\"+4)]].includes(this.state.queries[(\"query\"+4)]))\r\n                 {\r\n                   console.log(this.state.columnsToQuery[(\"columnToQuery\"+4)])\r\n                   console.log(this.state.queries[(\"query\"+4)])\r\n                  if(datefromFB>fulldatefrom && datefromFB<fulldateto){\r\n                    console.log(\"date true\")\r\n                   // return x[this.state.columnsToQuery[(\"columnToQuery\"+4)]].includes(this.state.queries[(\"query\"+4)])\r\n                   cond4=true;\r\n                  }\r\n                  else{\r\n                    console.log(\"date false\")\r\n                  }\r\n                }\r\n                }else{\r\n                  console.log(\"cond 4 undefined\")\r\n                  cond4=true;}\r\n                  //For FilterBox 5\r\n                 if(this.state.columnToQuery5!==undefined && this.state.columnToQuery5 !==\"\" && this.state.query5!==undefined && this.state.query5 !==\"\" && x[this.state.columnsToQuery[(\"columnToQuery\"+5)]]!==undefined){\r\n                  if(this.state.columnsToQuery[(\"columnToQuery\"+5)]===\"imageLabels\")\r\n                  {\r\n                    let tagarray =(this.state.queries[(\"query\"+5)]).split(',');\r\n                    let Firebasetagarray = x[this.state.columnsToQuery[(\"columnToQuery\"+5)]].split(',');\r\n                    console.log(\"TAG array \"+tagarray)\r\n                    console.log(\"Firebase Tag array \"+Firebasetagarray)\r\n                    let i =0;\r\n                    for(m=0;m<Firebasetagarray.length;m++){\r\n                     if(Firebasetagarray[m]!==\"\"){\r\n                     for(j=0;j<tagarray.length;j++)\r\n                     {\r\n                       console.log(\"Checking \"+Firebasetagarray[m].trim()+\" with \"+tagarray[j].trim());\r\n                    if(tagarray[j]!==\"\"){if(Firebasetagarray[m].trim().includes(tagarray[j].trim()))\r\n                      {if(datefromFB>fulldatefrom && datefromFB<fulldateto){\r\n                        console.log(\"date true\")\r\n                       // return true;\r\n                       //cond5=true;\r\n                       if(this.state.columnsToQuery[(\"columnToQuery\"+2)]===\"imageLabelsConfidence\")\r\n                       {\r\n                         console.log(x[this.state.columnsToQuery[(\"columnToQuery\"+2)]])\r\n                         let confidencevalue = parseFloat(this.state.queries[(\"query\"+2)])\r\n                         if(x[this.state.columnsToQuery[(\"columnToQuery\"+2)]]!==undefined)\r\n                         {let Firebaseconfarray = x[this.state.columnsToQuery[(\"columnToQuery\"+2)]].split(',');\r\n                         console.log(\"checking \"+Firebaseconfarray[m]+\" with \"+confidencevalue)\r\n                          if(Firebaseconfarray[m]>confidencevalue)\r\n                          {cond5=true;\r\n                          console.log(\"passed conftest\")}\r\n                          \r\n \r\n                       }else{cond5=true;}}\r\n                      }\r\n                      else{\r\n                        console.log(\"date false\")\r\n                      }}\r\n                    }}\r\n                     }\r\n                 }}\r\n                 if(x[this.state.columnsToQuery[(\"columnToQuery\"+5)]].includes(this.state.queries[(\"query\"+5)]))\r\n                 {\r\n                  if(datefromFB>fulldatefrom && datefromFB<fulldateto){\r\n                    console.log(\"date true\")\r\n                   // return x[this.state.columnsToQuery[(\"columnToQuery\"+5)]].includes(this.state.queries[(\"query\"+5)])\r\n                   cond5=true;\r\n                  }\r\n                  else{\r\n                    console.log(\"date false\")\r\n                  }\r\n                }\r\n                }else{cond5=true;}                     \r\n                  if(cond1 && cond2 &&cond3 && cond4 &cond5){\r\n                    this.state.MapLocs[iter].eligible=true;\r\n                    console.log(this.state.MapLocs)\r\n                    \r\n                    // console.log(this.state.posremove)\r\n                    return true;\r\n                  }\r\n                  else{\r\n                    this.state.MapLocs[iter].eligible=false;\r\n                    // this.state.posremove.push(iter);\r\n                  }\r\n                  }\r\n                    )\r\n                  : \r\n           SensorValuesFinal\r\n             )}\r\n            header={[\r\n\r\n\r\n              {\r\n                name: \"User\",\r\n                prop: \"user\"\r\n              },\r\n              {\r\n                name: \"ambTempValue\",\r\n                prop: \"ambTempValue\"\r\n              },\r\n              {\r\n                name: \"latitudeValue\",\r\n                prop: \"latitudeValue\"\r\n              },\r\n              {\r\n                name: \"lightValue\",\r\n                prop: \"lightValue\"\r\n              },\r\n              {\r\n                name: \"longitudeValue\",\r\n                prop: \"longitudeValue\"\r\n              },\r\n              {\r\n                name: \"pressureValue\",\r\n                prop: \"pressureValue\"\r\n              },\r\n              {\r\n                name: \"Tags\",\r\n                prop: \"tags\"\r\n              },\r\n              {\r\n                name: \"ImageLabels\",\r\n                prop: \"imageLabels\"\r\n              },\r\n              {\r\n                name: \"Day Of Photo\",\r\n                prop: \"dateOfPhoto\"\r\n              },\r\n              {\r\n                name: \"City\",\r\n                prop: \"city\"\r\n              },\r\n              {\r\n                name: \"Temperature\",\r\n                prop: \"tempValue\"\r\n              },\r\n              {\r\n                name: \"Activity\",\r\n                prop: \"activity\"\r\n              },\r\n              {\r\n                name: \"LabelsConfidence\",\r\n                prop: \"imageLabelsConfidence\"\r\n              }\r\n              \r\n\r\n            ]}\r\n          />\r\n          </div>\r\n      </MuiThemeProvider>\r\n      <Gmaps style={{margintop:\"100px\"}} markers ={this.state.Mapsarray} showonmap={()=>this.viewOnMaps(this.state.NewMapLocs)}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}