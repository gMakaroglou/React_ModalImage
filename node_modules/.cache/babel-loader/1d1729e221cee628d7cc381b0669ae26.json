{"ast":null,"code":"// import React from \"react\";\n// import {\n//   Table,\n//   TableBody,\n//   TableHeader,\n//   TableHeaderColumn,\n//   TableRow,\n//   TableRowColumn\n// } from \"material-ui/Table\";\n// import VisIcon from \"material-ui/svg-icons/action/visibility\";\n// import Himodal from \"./ImageModal\"\n// class TestTable extends React.Component {\n//     render() {\n//         const row = (x, i, header) =>\n//   <TableRow key={`tr-${i}`} selected={this.props.selectedRows.includes(i) ? true:false} >\n//   <TableRowColumn key={\"\"} style={{\n//                       whiteSpace: \"normal\",\n//                       wordWrap: \"break-word\"\n//                     }}>\n//      <Himodal user={x[\"user\"]} image={x[\"imageId\"]}/>\n//      {console.log(\"Image \"+x[\"imageId\"])}\n//       </TableRowColumn>\n//     {header.map((y, k) =>\n//       <TableRowColumn key={`trc-${k}`} style={{wordWrap: 'break-word', whiteSpace: 'normal'}} >\n//         {x[y.prop]}\n//       </TableRowColumn>\n//     )}\n//   </TableRow>;\n//   return(\n//     <Table\n//     multiSelectable={true}\n//     onRowSelection={selectionRows=>{\n//         console.log(\"onRowSelection\" + selectionRows,this.props.updateRows(selectionRows))\n//     }} >\n//     <TableHeader >\n//       <TableRow>\n//       <TableHeaderColumn key={\"\"}>View</TableHeaderColumn>\n//         {this.props.header.map((x, i) =>\n//           <TableHeaderColumn key={`thc-${i}`}>\n//             {x.name}\n//           </TableHeaderColumn>\n//         )}\n//       </TableRow>\n//     </TableHeader>\n//     <TableBody deselectOnClickaway={false}>\n//       {this.props.data.map((x, i) => row(x, i, this.props.header))}\n//     </TableBody>\n//   </Table>\n//   )\n//     }\n// }\n// export default TestTable","map":{"version":3,"sources":["C:/Users/Makjin/Documents/ptuxiakh/React_ModalImage/src/newmattable.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from \"react\";\r\n// import {\r\n//   Table,\r\n//   TableBody,\r\n//   TableHeader,\r\n//   TableHeaderColumn,\r\n//   TableRow,\r\n//   TableRowColumn\r\n// } from \"material-ui/Table\";\r\n// import VisIcon from \"material-ui/svg-icons/action/visibility\";\r\n// import Himodal from \"./ImageModal\"\r\n\r\n// class TestTable extends React.Component {\r\n//     render() {\r\n//         const row = (x, i, header) =>\r\n//   <TableRow key={`tr-${i}`} selected={this.props.selectedRows.includes(i) ? true:false} >\r\n//   <TableRowColumn key={\"\"} style={{\r\n//                       whiteSpace: \"normal\",\r\n//                       wordWrap: \"break-word\"\r\n//                     }}>\r\n//      <Himodal user={x[\"user\"]} image={x[\"imageId\"]}/>\r\n//      {console.log(\"Image \"+x[\"imageId\"])}\r\n//       </TableRowColumn>\r\n//     {header.map((y, k) =>\r\n    \r\n//       <TableRowColumn key={`trc-${k}`} style={{wordWrap: 'break-word', whiteSpace: 'normal'}} >\r\n//         {x[y.prop]}\r\n//       </TableRowColumn>\r\n//     )}\r\n    \r\n//   </TableRow>;\r\n\r\n//   return(\r\n//     <Table\r\n//     multiSelectable={true}\r\n//     onRowSelection={selectionRows=>{\r\n//         console.log(\"onRowSelection\" + selectionRows,this.props.updateRows(selectionRows))\r\n//     }} >\r\n//     <TableHeader >\r\n//       <TableRow>\r\n//       <TableHeaderColumn key={\"\"}>View</TableHeaderColumn>\r\n//         {this.props.header.map((x, i) =>\r\n//           <TableHeaderColumn key={`thc-${i}`}>\r\n//             {x.name}\r\n//           </TableHeaderColumn>\r\n//         )}\r\n//       </TableRow>\r\n//     </TableHeader>\r\n//     <TableBody deselectOnClickaway={false}>\r\n      \r\n//       {this.props.data.map((x, i) => row(x, i, this.props.header))}\r\n//     </TableBody>\r\n//   </Table>\r\n//   )\r\n//     }\r\n// }\r\n// export default TestTable"]},"metadata":{},"sourceType":"module"}