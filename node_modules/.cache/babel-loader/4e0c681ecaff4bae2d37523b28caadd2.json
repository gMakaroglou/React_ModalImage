{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', './windowOrGlobal'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./windowOrGlobal'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.windowOrGlobal);\n    global.ScriptCache = mod.exports;\n  }\n})(this, function (exports, window) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var counter = 0;\n  var scriptMap = typeof window !== 'undefined' && window._scriptMap || new Map();\n\n  var ScriptCache = exports.ScriptCache = function (global) {\n    global._scriptMap = global._scriptMap || scriptMap;\n    return function ScriptCache(scripts) {\n      var Cache = {};\n\n      Cache._onLoad = function (key) {\n        return function (cb) {\n          var registered = true;\n\n          function unregister() {\n            registered = false;\n          }\n\n          var stored = scriptMap.get(key);\n\n          if (stored) {\n            stored.promise.then(function () {\n              if (registered) {\n                stored.error ? cb(stored.error) : cb(null, stored);\n              }\n\n              return stored;\n            });\n          } else {// TODO:\n          }\n\n          return unregister;\n        };\n      };\n\n      Cache._scriptTag = function (key, src) {\n        if (!scriptMap.has(key)) {\n          // Server side rendering environments don't always have access to the `document` global.\n          // In these cases, we're not going to be able to return a script tag, so just return null.\n          if (typeof document === 'undefined') return null;\n          var tag = document.createElement('script');\n          var promise = new Promise(function (resolve, reject) {\n            var resolved = false,\n                errored = false,\n                body = document.getElementsByTagName('body')[0];\n            tag.type = 'text/javascript';\n            tag.async = false; // Load in order\n\n            var cbName = 'loaderCB' + counter++ + Date.now();\n            var cb = void 0;\n\n            var handleResult = function handleResult(state) {\n              return function (evt) {\n                var stored = scriptMap.get(key);\n\n                if (state === 'loaded') {\n                  stored.resolved = true;\n                  resolve(src); // stored.handlers.forEach(h => h.call(null, stored))\n                  // stored.handlers = []\n                } else if (state === 'error') {\n                  stored.errored = true; // stored.handlers.forEach(h => h.call(null, stored))\n                  // stored.handlers = [];\n\n                  reject(evt);\n                }\n\n                stored.loaded = true;\n                cleanup();\n              };\n            };\n\n            var cleanup = function cleanup() {\n              if (global[cbName] && typeof global[cbName] === 'function') {\n                global[cbName] = null;\n                delete global[cbName];\n              }\n            };\n\n            tag.onload = handleResult('loaded');\n            tag.onerror = handleResult('error');\n\n            tag.onreadystatechange = function () {\n              handleResult(tag.readyState);\n            }; // Pick off callback, if there is one\n\n\n            if (src.match(/callback=CALLBACK_NAME/)) {\n              src = src.replace(/(callback=)[^\\&]+/, '$1' + cbName);\n              cb = window[cbName] = tag.onload;\n            } else {\n              tag.addEventListener('load', tag.onload);\n            }\n\n            tag.addEventListener('error', tag.onerror);\n            tag.src = src;\n            body.appendChild(tag);\n            return tag;\n          });\n          var initialState = {\n            loaded: false,\n            error: false,\n            promise: promise,\n            tag: tag\n          };\n          scriptMap.set(key, initialState);\n        }\n\n        return scriptMap.get(key);\n      }; // let scriptTags = document.querySelectorAll('script')\n      //\n      // NodeList.prototype.filter = Array.prototype.filter;\n      // NodeList.prototype.map = Array.prototype.map;\n      // const initialScripts = scriptTags\n      //   .filter(s => !!s.src)\n      //   .map(s => s.src.split('?')[0])\n      //   .reduce((memo, script) => {\n      //     memo[script] = script;\n      //     return memo;\n      //   }, {});\n\n\n      Object.keys(scripts).forEach(function (key) {\n        var script = scripts[key];\n        var tag = window._scriptMap.has(key) ? window._scriptMap.get(key).tag : Cache._scriptTag(key, script);\n        Cache[key] = {\n          tag: tag,\n          onLoad: Cache._onLoad(key)\n        };\n      });\n      return Cache;\n    };\n  }(window);\n\n  exports.default = ScriptCache;\n});","map":{"version":3,"sources":["C:/Users/Makjin/Documents/ptuxiakh/React_ModalImage/node_modules/google-maps-react/dist/lib/ScriptCache.js"],"names":["global","factory","define","amd","exports","require","mod","windowOrGlobal","ScriptCache","window","Object","defineProperty","value","counter","scriptMap","_scriptMap","Map","scripts","Cache","_onLoad","key","cb","registered","unregister","stored","get","promise","then","error","_scriptTag","src","has","document","tag","createElement","Promise","resolve","reject","resolved","errored","body","getElementsByTagName","type","async","cbName","Date","now","handleResult","state","evt","loaded","cleanup","onload","onerror","onreadystatechange","readyState","match","replace","addEventListener","appendChild","initialState","set","keys","forEach","script","onLoad","default"],"mappings":"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","sourcesContent":["(function (global, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(['exports', './windowOrGlobal'], factory);\r\n    } else if (typeof exports !== \"undefined\") {\r\n        factory(exports, require('./windowOrGlobal'));\r\n    } else {\r\n        var mod = {\r\n            exports: {}\r\n        };\r\n        factory(mod.exports, global.windowOrGlobal);\r\n        global.ScriptCache = mod.exports;\r\n    }\r\n})(this, function (exports, window) {\r\n    'use strict';\r\n\r\n    Object.defineProperty(exports, \"__esModule\", {\r\n        value: true\r\n    });\r\n    var counter = 0;\r\n    var scriptMap = typeof window !== 'undefined' && window._scriptMap || new Map();\r\n    var ScriptCache = exports.ScriptCache = function (global) {\r\n        global._scriptMap = global._scriptMap || scriptMap;\r\n        return function ScriptCache(scripts) {\r\n            var Cache = {};\r\n\r\n            Cache._onLoad = function (key) {\r\n                return function (cb) {\r\n                    var registered = true;\r\n\r\n                    function unregister() {\r\n                        registered = false;\r\n                    }\r\n\r\n                    var stored = scriptMap.get(key);\r\n\r\n                    if (stored) {\r\n                        stored.promise.then(function () {\r\n                            if (registered) {\r\n                                stored.error ? cb(stored.error) : cb(null, stored);\r\n                            }\r\n\r\n                            return stored;\r\n                        });\r\n                    } else {\r\n                        // TODO:\r\n                    }\r\n\r\n                    return unregister;\r\n                };\r\n            };\r\n\r\n            Cache._scriptTag = function (key, src) {\r\n                if (!scriptMap.has(key)) {\r\n                    // Server side rendering environments don't always have access to the `document` global.\r\n                    // In these cases, we're not going to be able to return a script tag, so just return null.\r\n                    if (typeof document === 'undefined') return null;\r\n\r\n                    var tag = document.createElement('script');\r\n                    var promise = new Promise(function (resolve, reject) {\r\n                        var resolved = false,\r\n                            errored = false,\r\n                            body = document.getElementsByTagName('body')[0];\r\n\r\n                        tag.type = 'text/javascript';\r\n                        tag.async = false; // Load in order\r\n\r\n                        var cbName = 'loaderCB' + counter++ + Date.now();\r\n                        var cb = void 0;\r\n\r\n                        var handleResult = function handleResult(state) {\r\n                            return function (evt) {\r\n                                var stored = scriptMap.get(key);\r\n                                if (state === 'loaded') {\r\n                                    stored.resolved = true;\r\n                                    resolve(src);\r\n                                    // stored.handlers.forEach(h => h.call(null, stored))\r\n                                    // stored.handlers = []\r\n                                } else if (state === 'error') {\r\n                                    stored.errored = true;\r\n                                    // stored.handlers.forEach(h => h.call(null, stored))\r\n                                    // stored.handlers = [];\r\n                                    reject(evt);\r\n                                }\r\n                                stored.loaded = true;\r\n\r\n                                cleanup();\r\n                            };\r\n                        };\r\n\r\n                        var cleanup = function cleanup() {\r\n                            if (global[cbName] && typeof global[cbName] === 'function') {\r\n                                global[cbName] = null;\r\n                                delete global[cbName];\r\n                            }\r\n                        };\r\n\r\n                        tag.onload = handleResult('loaded');\r\n                        tag.onerror = handleResult('error');\r\n                        tag.onreadystatechange = function () {\r\n                            handleResult(tag.readyState);\r\n                        };\r\n\r\n                        // Pick off callback, if there is one\r\n                        if (src.match(/callback=CALLBACK_NAME/)) {\r\n                            src = src.replace(/(callback=)[^\\&]+/, '$1' + cbName);\r\n                            cb = window[cbName] = tag.onload;\r\n                        } else {\r\n                            tag.addEventListener('load', tag.onload);\r\n                        }\r\n                        tag.addEventListener('error', tag.onerror);\r\n\r\n                        tag.src = src;\r\n                        body.appendChild(tag);\r\n\r\n                        return tag;\r\n                    });\r\n                    var initialState = {\r\n                        loaded: false,\r\n                        error: false,\r\n                        promise: promise,\r\n                        tag: tag\r\n                    };\r\n                    scriptMap.set(key, initialState);\r\n                }\r\n                return scriptMap.get(key);\r\n            };\r\n\r\n            // let scriptTags = document.querySelectorAll('script')\r\n            //\r\n            // NodeList.prototype.filter = Array.prototype.filter;\r\n            // NodeList.prototype.map = Array.prototype.map;\r\n            // const initialScripts = scriptTags\r\n            //   .filter(s => !!s.src)\r\n            //   .map(s => s.src.split('?')[0])\r\n            //   .reduce((memo, script) => {\r\n            //     memo[script] = script;\r\n            //     return memo;\r\n            //   }, {});\r\n\r\n            Object.keys(scripts).forEach(function (key) {\r\n                var script = scripts[key];\r\n\r\n                var tag = window._scriptMap.has(key) ? window._scriptMap.get(key).tag : Cache._scriptTag(key, script);\r\n\r\n                Cache[key] = {\r\n                    tag: tag,\r\n                    onLoad: Cache._onLoad(key)\r\n                };\r\n            });\r\n\r\n            return Cache;\r\n        };\r\n    }(window);\r\n\r\n    exports.default = ScriptCache;\r\n});"]},"metadata":{},"sourceType":"script"}