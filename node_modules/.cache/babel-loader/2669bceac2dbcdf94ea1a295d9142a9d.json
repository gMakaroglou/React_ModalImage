{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gMakaroglou\\\\Documents\\\\ptuxiakh_new\\\\react_modalimage\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport FirebaseConfig from \"./firebaseconfig\";\nimport Firebase from \"firebase\";\nimport SelectField from \"material-ui/SelectField\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport TextField from \"material-ui/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport orderBy from \"lodash.orderby\";\nimport { Divider, Form, Label } from \"semantic-ui-react\";\nimport \"./FlexBox.css\";\nimport FilteringComp from \"./FIlteringomponent\";\nimport { concat } from \"bytebuffer\";\nimport DTP from \"./DateTimePick\";\nimport Mattable from \"./newmattable\";\nimport Gmaps from \"./Gmaps\";\nimport styles from \"./styles.module.css\";\nimport papeilogo from \"./images/papei-logo.jpg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserData = () => {\n      let ref = Firebase.database().ref(\"/SensorFoo/\");\n      ref.on(\"value\", snapshot => {\n        const state = snapshot.val();\n        this.setState({\n          FirebaseData: state\n        });\n      });\n    };\n\n    this.ChangeFilterStatus = e => {\n      let currentqueries = { ...this.state.queries\n      };\n      let queryname = e.target.name;\n      currentqueries[e.target.name] = e.target.value;\n      console.log(\"Current Queries\" + currentqueries);\n      console.log(\"e target name\" + e.target.name);\n      this.setState({\n        queries: currentqueries,\n        [queryname]: e.target.value\n      });\n    };\n\n    this.ChangeFilterColumnStatus = (event, index, value, FilterNumber) => {\n      let currentcolumns = { ...this.state.columnsToQuery\n      };\n      let Columntoquery = \"columnToQuery\" + FilterNumber;\n      currentcolumns[\"columnToQuery\" + FilterNumber] = value;\n      this.setState({\n        columnsToQuery: currentcolumns,\n        [Columntoquery]: value\n      }); //   this.setState({columnToQuery1 : value,\n      // columnsToQuery : [...this.state.columnsToQuery,value]})\n    };\n\n    this.hideFilter = queryToHide => {\n      let query = \"showquery\" + queryToHide;\n      this.setState((state // this is the current state\n      ) => ({\n        numberoffilters: state.numberoffilters - 1,\n        // this will be the previous randomNumber\n        [query]: false\n      }));\n      console.log(this.state.numberoffilters);\n    };\n\n    this.showFilter = () => {\n      this.setState((state // this is the current state\n      ) => ({\n        numberoffilters: state.numberoffilters + 1,\n        // this will be the previous randomNumber\n        showquery3: this.state.numberoffilters + 1 >= 3 ? true : false,\n        showquery4: this.state.numberoffilters + 1 >= 4 ? true : false,\n        showquery5: this.state.numberoffilters + 1 >= 5 ? true : false\n      }));\n    };\n\n    this.changeDateValue = date => {\n      this.setState(state => ({\n        dateFrom: date\n      }));\n      console.log(this.state.dateFrom);\n    };\n\n    this.changeDateValueTo = date => {\n      this.setState(state => ({\n        dateTo: date\n      }));\n    };\n\n    this.changeTimeValue = time => {\n      this.setState(state => ({\n        timeFrom: time\n      }));\n    };\n\n    this.changeTimeValueTo = time => {\n      console.log(time);\n      this.setState(state => ({\n        timeTo: time\n      }));\n    };\n\n    this.updateSelectedRows = rows => {\n      console.log(rows);\n      this.setState(state => ({\n        selrows: rows\n      }));\n    };\n\n    this.viewOnMaps = e => {\n      this.state.Mapsarray = [];\n      let temparr = [];\n      let tempMaps = this.state.MapLocs;\n      this.state.posremove = [];\n      let positionschanged = false;\n      console.log(this.state.selrows);\n      console.log(this.state.MapLocs[this.state.selrows]);\n      console.log(this.state.Mapsarray);\n\n      for (let pos in this.state.MapLocs) {\n        if (!this.state.MapLocs[pos].eligible) {\n          this.state.posremove.push(pos);\n          positionschanged = true;\n        } //  this.state.Mapsarray.push(e[this.state.selrows[marker]])\n\n      }\n\n      console.log(this.state.posremove);\n      let removeValFromIndex = this.state.posremove;\n\n      for (var i = removeValFromIndex.length - 1; i >= 0; i--) {\n        this.state.MapLocs.splice(removeValFromIndex[i], 1);\n      }\n\n      console.log(this.state.MapLocs);\n\n      for (let marker in this.state.selrows) {\n        console.log(this.state.selrows[marker]);\n        temparr.push(this.state.MapLocs[this.state.selrows[marker]]); //  this.state.Mapsarray.push(e[this.state.selrows[marker]])\n      }\n\n      if (!positionschanged) {\n        this.setState(state => ({\n          Mapsarray: temparr,\n          NewMapLocs: this.state.MapLocs\n        }));\n        console.log(this.state.Mapsarray);\n      } else {\n        this.setState(state => ({\n          Mapsarray: this.state.MapLocs,\n          NewMapLocs: this.state.MapLocs\n        }));\n        console.log(this.state.Mapsarray);\n      }\n    };\n\n    if (!Firebase.apps.length) {\n      const firebaseApp = Firebase.initializeApp(FirebaseConfig);\n    }\n\n    this.state = {\n      SensorValues: [],\n      //State Variable for Firebase Data\n      FirebaseData: [],\n      //User Input for Filtering\n      query1: \"\",\n      query2: \"\",\n      query3: \"\",\n      query4: \"\",\n      query5: \"\",\n      query6: \"\",\n      queries: [],\n      //Number Of Columns for Filtering\n      columnToQuery1: \"\",\n      columnToQuery2: \"\",\n      columnToQuery3: \"\",\n      columnToQuery4: \"\",\n      columnToQuery5: \"\",\n      columnToQuery6: \"\",\n      columnsToQuery: [],\n      numberoffilters: 2,\n      showquery3: false,\n      showquery4: false,\n      showquery5: false,\n      //Initialized Timestamps\n      dateFrom: \"2019-09-18T21:11:57\",\n      dateTo: \"2020-02-18T21:11:57\",\n      timeFrom: \"2019-08-18T21:11:54\",\n      timeTo: \"2019-08-18T21:11:53\",\n      selrows: [],\n      MapLocs: [],\n      Mapsarray: [],\n      NewMapLocs: [],\n      posremove: [],\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate() {} //Get Data From Firebase\n\n\n  render() {\n    var SensorValuestmp = [];\n    let SensorValuesFinal = [];\n    var SensorValues = this.state.FirebaseData;\n    console.log(this.state);\n\n    for (let user in SensorValues) {\n      for (let record in SensorValues[user]) {\n        SensorValuestmp = [];\n        Object.keys(SensorValues[user][record]).map(x => {\n          SensorValuestmp.push(SensorValues[user][record][x]);\n        });\n        SensorValuestmp.push(SensorValues[user][record][\"test\"]);\n        SensorValuesFinal = [...SensorValuesFinal, Object.assign(SensorValuestmp[0], SensorValuestmp[1], SensorValuestmp[2])];\n      }\n    } //Convert Location Data in 2D array\n\n\n    let DataArrayForMaps = new Array();\n\n    for (let record in SensorValuesFinal) {\n      DataArrayForMaps[record] = new Array();\n\n      for (let value in SensorValuesFinal[record]) {\n        if (value === \"latitudeValue\") {\n          DataArrayForMaps[record][\"latitude\"] = SensorValuesFinal[record][value];\n          DataArrayForMaps[record].eligible = true;\n        }\n\n        if (value === \"longitudeValue\") {\n          DataArrayForMaps[record][\"longitude\"] = SensorValuesFinal[record][value];\n          DataArrayForMaps[record].eligible = true;\n        }\n      }\n    }\n\n    this.state.MapLocs = DataArrayForMaps;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: papeilogo,\n      className: styles.papeilogo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mui_div_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      style: {\n        marginLeft: \"-85%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      onClick: this.showFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Label, {\n      style: {\n        marginLeft: \"-85%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, \"Add more Filters\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginTop: \"12%\"\n      },\n      value: this.state.query1,\n      name: \"query1\",\n      onChange: e => {\n        let currentqueries = { ...this.state.queries\n        };\n        currentqueries[e.target.name] = e.target.value;\n        console.log(\"Current Queries\" + currentqueries);\n        this.setState({\n          queries: currentqueries,\n          query1: e.target.value\n        });\n      },\n      hintText: \"Search Value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SelectField, {\n      floatingLabelText: \"Search By\",\n      value: this.state.columnToQuery1,\n      id: \"columnToQuery1\",\n      onChange: (event, index, value) => {\n        let currentcolumns = { ...this.state.columnsToQuery\n        };\n        console.log();\n        currentcolumns[\"columnToQuery1\"] = value;\n        this.setState({\n          columnsToQuery: currentcolumns,\n          columnToQuery1: value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"ambTempValue\",\n      primaryText: \"Ambient Temperature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"latitudeValue\",\n      primaryText: \"Latitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"lightValue\",\n      primaryText: \"lightValue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"longitudeValue\",\n      primaryText: \"Longitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"pressureValue\",\n      primaryText: \"Pressure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"tags\",\n      primaryText: \"Tags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"imageLabels\",\n      primaryText: \"Image Labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"city\",\n      primaryText: \"City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"tempValue\",\n      primaryText: \"Temperature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"activity\",\n      primaryText: \"Activity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"imageLabelsConfidence\",\n      primaryText: \"imageLabelsConfidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginTop: \"12%\"\n      },\n      value: this.state.query2,\n      name: \"query2\",\n      onChange: e => {\n        let currentqueries = { ...this.state.queries\n        };\n        currentqueries[e.target.name] = e.target.value;\n        console.log(\"Current Queries\" + currentqueries);\n        this.setState({\n          queries: currentqueries,\n          query2: e.target.value\n        });\n      },\n      hintText: \"Search Value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SelectField, {\n      floatingLabelText: \"Confidence\",\n      value: this.state.columnToQuery2,\n      inputprops: {\n        min: \"0.0\",\n        max: \"1.0\",\n        step: \"0.01\"\n      },\n      onChange: (event, index, value) => {\n        let currentcolumns = { ...this.state.columnsToQuery\n        };\n        console.log();\n        currentcolumns[\"columnToQuery2\"] = value;\n        this.setState({\n          columnsToQuery: currentcolumns,\n          columnToQuery2: value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"imageLabelsConfidence\",\n      primaryText: \"imageLabelsConfidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    })))), this.state.showquery3 ? /*#__PURE__*/React.createElement(FilteringComp, {\n      hideFilter: this.hideFilter,\n      changeColumn: this.ChangeFilterColumnStatus,\n      onchange: this.ChangeFilterStatus,\n      FilterNumber: \"3\",\n      columnvalue: this.state.columnToQuery3 || \"\",\n      queryvalue: this.state.query3 || \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }\n    }), this.state.showquery4 ? /*#__PURE__*/React.createElement(FilteringComp, {\n      hideFilter: this.hideFilter,\n      changeColumn: this.ChangeFilterColumnStatus,\n      onchange: this.ChangeFilterStatus,\n      FilterNumber: \"4\",\n      columnvalue: this.state.columnToQuery4 || \"\",\n      queryvalue: this.state.query4 || \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 15\n      }\n    }), this.state.showquery5 ? /*#__PURE__*/React.createElement(FilteringComp, {\n      hideFilter: this.hideFilter,\n      changeColumn: this.ChangeFilterColumnStatus,\n      onchange: this.ChangeFilterStatus,\n      FilterNumber: \"5\",\n      columnvalue: this.state.columnToQuery5 || \"\",\n      queryvalue: this.state.query5 || \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(DTP, {\n      onchange: this.changeDateValue,\n      onchangeTo: this.changeDateValueTo,\n      datevalue: this.state.dateFrom,\n      datevalueTo: this.state.dateTo,\n      timeTo: this.state.timeTo,\n      timevalue: this.state.timeFrom,\n      onTimeChange: this.changeTimeValue,\n      onTimeChangeTo: this.changeTimeValueTo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Mattable, {\n      updateRows: this.updateSelectedRows,\n      selectedRows: this.state.selrows,\n      data: //newresult\n      orderBy(this.state.query1 || this.state.query2 || this.state.query3 || this.state.query4 || this.state.query5 ? SensorValuesFinal.filter((x, iter) => {\n        let m = 0;\n        let j = 0;\n        let columnslength = Object.keys(this.state.columnsToQuery).length;\n        let cond1, cond2, cond3, cond4, cond5;\n        let datefrom = new Date(this.state.dateFrom);\n        let dateto = new Date(this.state.dateTo);\n        let timeFrom = new Date(this.state.timeFrom);\n        let timeTo = new Date(this.state.timeTo);\n        let fulldateto = new Date(dateto.getMonth() + 1 + \"/\" + dateto.getDate() + \"/\" + dateto.getFullYear() + \" \" + timeTo.getHours() + \":\" + timeTo.getMinutes());\n        let fulldatefrom = new Date(datefrom.getMonth() + 1 + \"/\" + datefrom.getDate() + \"/\" + datefrom.getFullYear() + \" \" + timeFrom.getHours() + \":\" + timeFrom.getMinutes());\n        let datecond = false;\n        let datefromFB = new Date(x[\"dateOfPhoto\"] + \" \" + x[\"timeOfPhoto\"]);\n        let booldatefrom = datefromFB > fulldatefrom;\n        let booldateto = datefromFB < fulldateto;\n        cond1 = false;\n        cond2 = false;\n        cond3 = false;\n        cond4 = false;\n        cond5 = false;\n\n        if (this.state.columnToQuery1 !== undefined && this.state.columnToQuery1 !== \"\" && this.state.query1 !== undefined && this.state.query1 !== \"\" && x[this.state.columnsToQuery[\"columnToQuery\" + 1]] !== undefined) {\n          //Check if include\n          if (this.state.columnsToQuery[\"columnToQuery\" + 1] === \"imageLabels\") {\n            let tagarray = this.state.queries[\"query\" + 1].split(\",\");\n            let Firebasetagarray = x[this.state.columnsToQuery[\"columnToQuery\" + 1]].split(\",\");\n            console.log(\"TAG array \" + tagarray);\n            console.log(\"Firebase Tag array \" + Firebasetagarray);\n\n            for (m = 0; m < Firebasetagarray.length; m++) {\n              if (Firebasetagarray[m] !== \"\") {\n                for (j = 0; j < tagarray.length; j++) {\n                  console.log(\"Checking \" + Firebasetagarray[m].trim() + \" with \" + tagarray[j].trim());\n\n                  if (tagarray[j] !== \"\") {\n                    if (Firebasetagarray[m].trim().toLowerCase().includes(tagarray[j].trim().toLowerCase())) {\n                      if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n                        console.log(\"date true\"); //return true;\n                        // cond1=true;\n\n                        if (this.state.columnsToQuery[\"columnToQuery\" + 2] === \"imageLabelsConfidence\") {\n                          console.log(x[this.state.columnsToQuery[\"columnToQuery\" + 2]]);\n                          let confidencevalue = parseFloat(this.state.queries[\"query\" + 2]);\n\n                          if (x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !== undefined) {\n                            let Firebaseconfarray = x[this.state.columnsToQuery[\"columnToQuery\" + 2]].split(\",\");\n                            console.log(\"checking \" + Firebaseconfarray[m] + \" with \" + confidencevalue);\n\n                            if (Firebaseconfarray[m] > confidencevalue) {\n                              cond1 = true;\n                              console.log(\"passed conftest\");\n                            }\n                          } else {\n                            cond1 = true;\n                            console.log(\"passed conftest\");\n                          }\n                        }\n                      } else {\n                        console.log(\"date false\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else if (x[this.state.columnsToQuery[\"columnToQuery\" + 1]].toLowerCase().includes(this.state.queries[\"query\" + 1].toLowerCase())) {\n            if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n              console.log(\"date true\"); // return x[this.state.columnsToQuery[(\"columnToQuery\"+1)]].includes(this.state.queries[(\"query\"+1)])\n\n              cond1 = true;\n            } else {\n              console.log(\"date false\");\n            }\n          }\n        } //For FilterBox 2\n\n\n        if (this.state.columnToQuery2 !== undefined && this.state.columnToQuery2 !== \"\" && this.state.query2 !== undefined && this.state.query2 !== \"\" && x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !== undefined) {\n          if (this.state.columnsToQuery[\"columnToQuery\" + 2] === \"imageLabels\") {\n            let tagarray = this.state.queries[\"query\" + 2].split(\",\");\n            let Firebasetagarray = x[this.state.columnsToQuery[\"columnToQuery\" + 2]].split(\",\");\n            console.log(\"TAG array \" + tagarray);\n            console.log(\"Firebase Tag array \" + Firebasetagarray);\n\n            for (m = 0; m < Firebasetagarray.length; m++) {\n              if (Firebasetagarray[m] !== \"\") {\n                for (j = 0; j < tagarray.length; j++) {\n                  console.log(\"Checking \" + Firebasetagarray[m].trim() + \" with \" + tagarray[j].trim());\n\n                  if (tagarray[j] !== \"\") {\n                    if (Firebasetagarray[m].trim().toLowerCase().includes(tagarray[j].trim().toLowerCase())) {\n                      if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n                        console.log(\"date true\"); //return true;\n\n                        cond2 = true;\n                        console.log(\"passed conftest2\");\n                      } else {\n                        console.log(\"date false\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (x[this.state.columnsToQuery[\"columnToQuery\" + 2]].includes(this.state.queries[\"query\" + 2])) {\n            if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n              console.log(\"date true\"); //return x[this.state.columnsToQuery[(\"columnToQuery\"+2)]].includes(this.state.queries[(\"query\"+2)])\n\n              cond2 = true;\n              console.log(\"passed conftest2\");\n            } else {\n              console.log(\"date false\");\n            }\n          }\n        } else {\n          cond2 = true;\n        } //For FilterBox 3\n\n\n        if (this.state.columnToQuery3 !== undefined && this.state.columnToQuery3 !== \"\" && this.state.query3 !== undefined && this.state.query3 !== \"\" && x[this.state.columnsToQuery[\"columnToQuery\" + 3]] !== undefined) {\n          if (this.state.columnsToQuery[\"columnToQuery\" + 3] === \"imageLabels\") {\n            let tagarray = this.state.queries[\"query\" + 3].split(\",\");\n            let Firebasetagarray = x[this.state.columnsToQuery[\"columnToQuery\" + 3]].split(\",\");\n            console.log(\"TAG array \" + tagarray);\n            console.log(\"Firebase Tag array \" + Firebasetagarray);\n\n            for (m = 0; m < Firebasetagarray.length; m++) {\n              if (Firebasetagarray[m] !== \"\") {\n                for (j = 0; j < tagarray.length; j++) {\n                  console.log(\"Checking \" + Firebasetagarray[m].trim() + \" with \" + tagarray[j].trim());\n\n                  if (tagarray[j] !== \"\") {\n                    if (Firebasetagarray[m].trim().toLowerCase().includes(tagarray[j].trim().toLowerCase())) {\n                      if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n                        console.log(\"date true\"); //  return true;\n                        // cond3=true;\n\n                        if (this.state.columnsToQuery[\"columnToQuery\" + 2] === \"imageLabelsConfidence\") {\n                          console.log(x[this.state.columnsToQuery[\"columnToQuery\" + 2]]);\n                          let confidencevalue = parseFloat(this.state.queries[\"query\" + 2]);\n\n                          if (x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !== undefined) {\n                            let Firebaseconfarray = x[this.state.columnsToQuery[\"columnToQuery\" + 2]].split(\",\");\n                            console.log(\"checking \" + Firebaseconfarray[m] + \" with \" + confidencevalue);\n\n                            if (Firebaseconfarray[m] > confidencevalue) {\n                              cond3 = true;\n                              console.log(\"passed conftest3\");\n                              console.log(\"passed conftest\");\n                            }\n                          } else {\n                            cond3 = true;\n                            console.log(\"passed conftest3\");\n                          }\n                        }\n                      } else {\n                        console.log(\"date false\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (x[this.state.columnsToQuery[\"columnToQuery\" + 3]].toLowerCase().includes(this.state.queries[\"query\" + 3].toLowerCase())) {\n            if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n              console.log(\"date true\"); // return x[this.state.columnsToQuery[(\"columnToQuery\"+3)]].includes(this.state.queries[(\"query\"+3)])\n\n              cond3 = true;\n            } else {\n              console.log(\"date false\");\n            }\n          }\n        } else {\n          cond3 = true;\n        } //For FilterBox 4\n\n\n        if (this.state.columnToQuery4 !== undefined && this.state.columnToQuery4 !== \"\" && this.state.query4 !== undefined && this.state.query4 !== \"\" && x[this.state.columnsToQuery[\"columnToQuery\" + 4]] !== undefined) {\n          if (this.state.columnsToQuery[\"columnToQuery\" + 4] === \"imageLabels\") {\n            let tagarray = this.state.queries[\"query\" + 4].split(\",\");\n            let Firebasetagarray = x[this.state.columnsToQuery[\"columnToQuery\" + 4]].split(\",\");\n            console.log(\"TAG array \" + tagarray);\n            console.log(\"Firebase Tag array \" + Firebasetagarray);\n\n            for (m = 0; m < Firebasetagarray.length; m++) {\n              if (Firebasetagarray[m] !== \"\") {\n                for (j = 0; j < tagarray.length; j++) {\n                  console.log(\"Checking \" + Firebasetagarray[m].trim() + \" with \" + tagarray[j].trim());\n\n                  if (tagarray[j] !== \"\") {\n                    if (Firebasetagarray[m].trim().toLowerCase().includes(tagarray[j].trim().toLowerCase())) {\n                      if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n                        console.log(\"date true\"); //  return true;\n                        // cond3=true;\n\n                        if (this.state.columnsToQuery[\"columnToQuery\" + 2] === \"imageLabelsConfidence\") {\n                          console.log(x[this.state.columnsToQuery[\"columnToQuery\" + 2]]);\n                          let confidencevalue = parseFloat(this.state.queries[\"query\" + 2]);\n\n                          if (x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !== undefined) {\n                            let Firebaseconfarray = x[this.state.columnsToQuery[\"columnToQuery\" + 2]].split(\",\");\n                            console.log(\"checking \" + Firebaseconfarray[m] + \" with \" + confidencevalue);\n\n                            if (Firebaseconfarray[m] > confidencevalue) {\n                              cond4 = true;\n                              console.log(\"passed conftest4\");\n                              console.log(\"passed conftest\");\n                            }\n                          } else {\n                            cond3 = true;\n                            console.log(\"passed conftest4\");\n                          }\n                        }\n                      } else {\n                        console.log(\"date false\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (x[this.state.columnsToQuery[\"columnToQuery\" + 4]].toLowerCase().includes(this.state.queries[\"query\" + 4].toLowerCase())) {\n            if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n              console.log(\"date true\"); // return x[this.state.columnsToQuery[(\"columnToQuery\"+4)]].includes(this.state.queries[(\"query\"+4)])\n\n              cond3 = true;\n            } else {\n              console.log(\"date false\");\n            }\n          }\n        } else {\n          cond4 = true;\n        } //For FilterBox 5\n\n\n        if (this.state.columnToQuery5 !== undefined && this.state.columnToQuery5 !== \"\" && this.state.query5 !== undefined && this.state.query5 !== \"\" && x[this.state.columnsToQuery[\"columnToQuery\" + 5]] !== undefined) {\n          if (this.state.columnsToQuery[\"columnToQuery\" + 5] === \"imageLabels\") {\n            let tagarray = this.state.queries[\"query\" + 5].split(\",\");\n            let Firebasetagarray = x[this.state.columnsToQuery[\"columnToQuery\" + 5]].split(\",\");\n            console.log(\"TAG array \" + tagarray);\n            console.log(\"Firebase Tag array \" + Firebasetagarray);\n            let i = 0;\n\n            for (m = 0; m < Firebasetagarray.length; m++) {\n              if (Firebasetagarray[m] !== \"\") {\n                for (j = 0; j < tagarray.length; j++) {\n                  console.log(\"Checking \" + Firebasetagarray[m].trim() + \" with \" + tagarray[j].trim());\n\n                  if (tagarray[j] !== \"\") {\n                    if (Firebasetagarray[m].trim().toLowerCase().includes(tagarray[j].trim().toLowerCase())) {\n                      if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n                        console.log(\"date true\"); // return true;\n                        //cond5=true;\n\n                        if (this.state.columnsToQuery[\"columnToQuery\" + 2] === \"imageLabelsConfidence\") {\n                          console.log(x[this.state.columnsToQuery[\"columnToQuery\" + 2]]);\n                          let confidencevalue = parseFloat(this.state.queries[\"query\" + 2]);\n\n                          if (x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !== undefined) {\n                            let Firebaseconfarray = x[this.state.columnsToQuery[\"columnToQuery\" + 2]].split(\",\");\n                            console.log(\"checking \" + Firebaseconfarray[m] + \" with \" + confidencevalue);\n\n                            if (Firebaseconfarray[m] > confidencevalue) {\n                              cond5 = true;\n                              console.log(\"passed conftest\");\n                            }\n                          } else {\n                            cond5 = true;\n                            console.log(\"passed conftest5\");\n                          }\n                        }\n                      } else {\n                        console.log(\"date false\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (x[this.state.columnsToQuery[\"columnToQuery\" + 5]].toLowerCase().includes(this.state.queries[\"query\" + 5].toLowerCase())) {\n            if (datefromFB > fulldatefrom && datefromFB < fulldateto) {\n              console.log(\"date true\"); // return x[this.state.columnsToQuery[(\"columnToQuery\"+5)]].includes(this.state.queries[(\"query\"+5)])\n\n              cond5 = true;\n              console.log(\"passed conftest5\");\n            } else {\n              console.log(\"date false\");\n            }\n          }\n        } else {\n          cond5 = true;\n        }\n\n        console.log(\"Cond 1 is \" + cond1);\n        console.log(\"Cond 2 is \" + cond2);\n        console.log(\"Cond 3 is \" + cond3);\n        console.log(\"Cond 4 is \" + cond4);\n        console.log(\"Cond 5 is \" + cond5);\n\n        if (cond1 && cond2 && cond3 && cond4 & cond5) {\n          this.state.MapLocs[iter].eligible = true; // console.log(this.state.MapLocs)\n          // console.log(this.state.posremove)\n\n          return true;\n        } else {\n          this.state.MapLocs[iter].eligible = false; // this.state.posremove.push(iter);\n        }\n      }) : SensorValuesFinal),\n      header: [{\n        name: \"User\",\n        prop: \"user\"\n      }, {\n        name: \"ambTempValue\",\n        prop: \"ambTempValue\"\n      }, {\n        name: \"latitudeValue\",\n        prop: \"latitudeValue\"\n      }, {\n        name: \"lightValue\",\n        prop: \"lightValue\"\n      }, {\n        name: \"longitudeValue\",\n        prop: \"longitudeValue\"\n      }, {\n        name: \"pressureValue\",\n        prop: \"pressureValue\"\n      }, {\n        name: \"Tags\",\n        prop: \"tags\"\n      }, {\n        name: \"ImageLabels\",\n        prop: \"imageLabels\"\n      }, {\n        name: \"Day Of Photo\",\n        prop: \"dateOfPhoto\"\n      }, {\n        name: \"City\",\n        prop: \"city\"\n      }, {\n        name: \"Temperature\",\n        prop: \"tempValue\"\n      }, {\n        name: \"Activity\",\n        prop: \"activity\"\n      }, {\n        name: \"LabelsConfidence\",\n        prop: \"imageLabelsConfidence\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Gmaps, {\n      style: {\n        margintop: \"100px\"\n      },\n      markers: this.state.Mapsarray,\n      showonmap: () => this.viewOnMaps(this.state.NewMapLocs),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/gMakaroglou/Documents/ptuxiakh_new/react_modalimage/src/App.js"],"names":["React","Component","MuiThemeProvider","FirebaseConfig","Firebase","SelectField","MenuItem","TextField","Fab","AddIcon","orderBy","Divider","Form","Label","FilteringComp","concat","DTP","Mattable","Gmaps","styles","papeilogo","App","constructor","props","getUserData","ref","database","on","snapshot","state","val","setState","FirebaseData","ChangeFilterStatus","e","currentqueries","queries","queryname","target","name","value","console","log","ChangeFilterColumnStatus","event","index","FilterNumber","currentcolumns","columnsToQuery","Columntoquery","hideFilter","queryToHide","query","numberoffilters","showFilter","showquery3","showquery4","showquery5","changeDateValue","date","dateFrom","changeDateValueTo","dateTo","changeTimeValue","time","timeFrom","changeTimeValueTo","timeTo","updateSelectedRows","rows","selrows","viewOnMaps","Mapsarray","temparr","tempMaps","MapLocs","posremove","positionschanged","pos","eligible","push","removeValFromIndex","i","length","splice","marker","NewMapLocs","apps","firebaseApp","initializeApp","SensorValues","query1","query2","query3","query4","query5","query6","columnToQuery1","columnToQuery2","columnToQuery3","columnToQuery4","columnToQuery5","columnToQuery6","loaded","componentDidMount","componentDidUpdate","render","SensorValuestmp","SensorValuesFinal","user","record","Object","keys","map","x","assign","DataArrayForMaps","Array","marginLeft","marginTop","min","max","step","filter","iter","m","j","columnslength","cond1","cond2","cond3","cond4","cond5","datefrom","Date","dateto","fulldateto","getMonth","getDate","getFullYear","getHours","getMinutes","fulldatefrom","datecond","datefromFB","booldatefrom","booldateto","undefined","tagarray","split","Firebasetagarray","trim","toLowerCase","includes","confidencevalue","parseFloat","Firebaseconfarray","prop","margintop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport FirebaseConfig from \"./firebaseconfig\";\r\nimport Firebase from \"firebase\";\r\nimport SelectField from \"material-ui/SelectField\";\r\nimport MenuItem from \"material-ui/MenuItem\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport orderBy from \"lodash.orderby\";\r\nimport { Divider, Form, Label } from \"semantic-ui-react\";\r\nimport \"./FlexBox.css\";\r\nimport FilteringComp from \"./FIlteringomponent\";\r\nimport { concat } from \"bytebuffer\";\r\nimport DTP from \"./DateTimePick\";\r\nimport Mattable from \"./newmattable\";\r\nimport Gmaps from \"./Gmaps\";\r\nimport styles from \"./styles.module.css\";\r\nimport papeilogo from \"./images/papei-logo.jpg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (!Firebase.apps.length) {\r\n      const firebaseApp = Firebase.initializeApp(FirebaseConfig);\r\n    }\r\n    this.state = {\r\n      SensorValues: [],\r\n\r\n      //State Variable for Firebase Data\r\n      FirebaseData: [],\r\n\r\n      //User Input for Filtering\r\n      query1: \"\",\r\n      query2: \"\",\r\n      query3: \"\",\r\n      query4: \"\",\r\n      query5: \"\",\r\n      query6: \"\",\r\n      queries: [],\r\n\r\n      //Number Of Columns for Filtering\r\n      columnToQuery1: \"\",\r\n      columnToQuery2: \"\",\r\n      columnToQuery3: \"\",\r\n      columnToQuery4: \"\",\r\n      columnToQuery5: \"\",\r\n      columnToQuery6: \"\",\r\n      columnsToQuery: [],\r\n      numberoffilters: 2,\r\n      showquery3: false,\r\n      showquery4: false,\r\n      showquery5: false,\r\n\r\n      //Initialized Timestamps\r\n      dateFrom: \"2019-09-18T21:11:57\",\r\n      dateTo: \"2020-02-18T21:11:57\",\r\n      timeFrom: \"2019-08-18T21:11:54\",\r\n      timeTo: \"2019-08-18T21:11:53\",\r\n      selrows: [],\r\n      MapLocs: [],\r\n      Mapsarray: [],\r\n      NewMapLocs: [],\r\n      posremove: [],\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserData();\r\n  }\r\n  componentDidUpdate() {}\r\n\r\n  //Get Data From Firebase\r\n  getUserData = () => {\r\n    let ref = Firebase.database().ref(\"/SensorFoo/\");\r\n    ref.on(\"value\", (snapshot) => {\r\n      const state = snapshot.val();\r\n      this.setState({ FirebaseData: state });\r\n    });\r\n  };\r\n\r\n  //User Input Change\r\n  ChangeFilterStatus = (e) => {\r\n    let currentqueries = { ...this.state.queries };\r\n    let queryname = e.target.name;\r\n    currentqueries[e.target.name] = e.target.value;\r\n    console.log(\"Current Queries\" + currentqueries);\r\n    console.log(\"e target name\" + e.target.name);\r\n    this.setState({ queries: currentqueries, [queryname]: e.target.value });\r\n  };\r\n\r\n  //Filter Type Change\r\n  ChangeFilterColumnStatus = (event, index, value, FilterNumber) => {\r\n    let currentcolumns = { ...this.state.columnsToQuery };\r\n    let Columntoquery = \"columnToQuery\" + FilterNumber;\r\n    currentcolumns[\"columnToQuery\" + FilterNumber] = value;\r\n    this.setState({ columnsToQuery: currentcolumns, [Columntoquery]: value });\r\n    //   this.setState({columnToQuery1 : value,\r\n    // columnsToQuery : [...this.state.columnsToQuery,value]})\r\n  };\r\n\r\n  //Hide Extra Filters\r\n  hideFilter = (queryToHide) => {\r\n    let query = \"showquery\" + queryToHide;\r\n    this.setState((\r\n      state // this is the current state\r\n    ) => ({\r\n      numberoffilters: state.numberoffilters - 1, // this will be the previous randomNumber\r\n      [query]: false,\r\n    }));\r\n    console.log(this.state.numberoffilters);\r\n  };\r\n\r\n  //Display 3rd,4th or 5th filtering\r\n  showFilter = () => {\r\n    this.setState((\r\n      state // this is the current state\r\n    ) => ({\r\n      numberoffilters: state.numberoffilters + 1, // this will be the previous randomNumber\r\n      showquery3: this.state.numberoffilters + 1 >= 3 ? true : false,\r\n      showquery4: this.state.numberoffilters + 1 >= 4 ? true : false,\r\n      showquery5: this.state.numberoffilters + 1 >= 5 ? true : false,\r\n    }));\r\n  };\r\n\r\n  //Change Date Value From\r\n  changeDateValue = (date) => {\r\n    this.setState((state) => ({\r\n      dateFrom: date,\r\n    }));\r\n    console.log(this.state.dateFrom);\r\n  };\r\n  //Change Date Value To\r\n  changeDateValueTo = (date) => {\r\n    this.setState((state) => ({\r\n      dateTo: date,\r\n    }));\r\n  };\r\n\r\n  //Change Time Value From\r\n  changeTimeValue = (time) => {\r\n    this.setState((state) => ({\r\n      timeFrom: time,\r\n    }));\r\n  };\r\n  //Change Time Value To\r\n  changeTimeValueTo = (time) => {\r\n    console.log(time);\r\n    this.setState((state) => ({\r\n      timeTo: time,\r\n    }));\r\n  };\r\n  updateSelectedRows = (rows) => {\r\n    console.log(rows);\r\n    this.setState((state) => ({\r\n      selrows: rows,\r\n    }));\r\n  };\r\n  //View Rows on Google Maps\r\n  viewOnMaps = (e) => {\r\n    this.state.Mapsarray = [];\r\n    let temparr = [];\r\n    let tempMaps = this.state.MapLocs;\r\n    this.state.posremove = [];\r\n    let positionschanged = false;\r\n    console.log(this.state.selrows);\r\n    console.log(this.state.MapLocs[this.state.selrows]);\r\n    console.log(this.state.Mapsarray);\r\n\r\n    for (let pos in this.state.MapLocs) {\r\n      if (!this.state.MapLocs[pos].eligible) {\r\n        this.state.posremove.push(pos);\r\n        positionschanged = true;\r\n      }\r\n\r\n      //  this.state.Mapsarray.push(e[this.state.selrows[marker]])\r\n    }\r\n\r\n    console.log(this.state.posremove);\r\n    let removeValFromIndex = this.state.posremove;\r\n\r\n    for (var i = removeValFromIndex.length - 1; i >= 0; i--) {\r\n      this.state.MapLocs.splice(removeValFromIndex[i], 1);\r\n    }\r\n    console.log(this.state.MapLocs);\r\n    for (let marker in this.state.selrows) {\r\n      console.log(this.state.selrows[marker]);\r\n      temparr.push(this.state.MapLocs[this.state.selrows[marker]]);\r\n      //  this.state.Mapsarray.push(e[this.state.selrows[marker]])\r\n    }\r\n    if (!positionschanged) {\r\n      this.setState((state) => ({\r\n        Mapsarray: temparr,\r\n        NewMapLocs: this.state.MapLocs,\r\n      }));\r\n      console.log(this.state.Mapsarray);\r\n    } else {\r\n      this.setState((state) => ({\r\n        Mapsarray: this.state.MapLocs,\r\n        NewMapLocs: this.state.MapLocs,\r\n      }));\r\n      console.log(this.state.Mapsarray);\r\n    }\r\n  };\r\n  render() {\r\n    var SensorValuestmp = [];\r\n    let SensorValuesFinal = [];\r\n    var SensorValues = this.state.FirebaseData;\r\n    console.log(this.state);\r\n\r\n    for (let user in SensorValues) {\r\n      for (let record in SensorValues[user]) {\r\n        SensorValuestmp = [];\r\n        Object.keys(SensorValues[user][record]).map((x) => {\r\n          SensorValuestmp.push(SensorValues[user][record][x]);\r\n        });\r\n        SensorValuestmp.push(SensorValues[user][record][\"test\"]);\r\n        SensorValuesFinal = [\r\n          ...SensorValuesFinal,\r\n          Object.assign(\r\n            SensorValuestmp[0],\r\n            SensorValuestmp[1],\r\n            SensorValuestmp[2]\r\n          ),\r\n        ];\r\n      }\r\n    }\r\n\r\n    //Convert Location Data in 2D array\r\n    let DataArrayForMaps = new Array();\r\n    for (let record in SensorValuesFinal) {\r\n      DataArrayForMaps[record] = new Array();\r\n      for (let value in SensorValuesFinal[record]) {\r\n        if (value === \"latitudeValue\") {\r\n          DataArrayForMaps[record][\"latitude\"] =\r\n            SensorValuesFinal[record][value];\r\n          DataArrayForMaps[record].eligible = true;\r\n        }\r\n        if (value === \"longitudeValue\") {\r\n          DataArrayForMaps[record][\"longitude\"] =\r\n            SensorValuesFinal[record][value];\r\n          DataArrayForMaps[record].eligible = true;\r\n        }\r\n      }\r\n    }\r\n    this.state.MapLocs = DataArrayForMaps;\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-header\">\r\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n          <img src={papeilogo} className={styles.papeilogo} />\r\n          {/* <h2>Welcome to React</h2> */}\r\n        </div>\r\n        <p className=\"App-intro\">\r\n          {/* To get started, edit <code>src/App.js</code> and save to reload. */}\r\n        </p>\r\n        <MuiThemeProvider>\r\n          <div className=\"mui_div_wrapper\">\r\n            <div>\r\n              <Fab\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n                style={{ marginLeft: \"-85%\" }}\r\n              >\r\n                <AddIcon onClick={this.showFilter} />\r\n              </Fab>\r\n            </div>\r\n            <Label style={{ marginLeft: \"-85%\" }}>Add more Filters</Label>\r\n            <div className=\"flex-container\">\r\n              <div>\r\n                <TextField\r\n                  style={{ marginTop: \"12%\" }}\r\n                  value={this.state.query1}\r\n                  name=\"query1\"\r\n                  onChange={(e) => {\r\n                    let currentqueries = { ...this.state.queries };\r\n                    currentqueries[e.target.name] = e.target.value;\r\n                    console.log(\"Current Queries\" + currentqueries);\r\n                    this.setState({\r\n                      queries: currentqueries,\r\n                      query1: e.target.value,\r\n                    });\r\n                  }}\r\n                  hintText=\"Search Value\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <SelectField\r\n                  floatingLabelText=\"Search By\"\r\n                  value={this.state.columnToQuery1}\r\n                  id=\"columnToQuery1\"\r\n                  onChange={(event, index, value) => {\r\n                    let currentcolumns = { ...this.state.columnsToQuery };\r\n                    console.log();\r\n                    currentcolumns[\"columnToQuery1\"] = value;\r\n                    this.setState({\r\n                      columnsToQuery: currentcolumns,\r\n                      columnToQuery1: value,\r\n                    });\r\n                  }}\r\n                >\r\n                  <MenuItem\r\n                    value={\"ambTempValue\"}\r\n                    primaryText=\"Ambient Temperature\"\r\n                  />\r\n                  <MenuItem value={\"latitudeValue\"} primaryText=\"Latitude\" />\r\n                  <MenuItem value={\"lightValue\"} primaryText=\"lightValue\" />\r\n                  <MenuItem value={\"longitudeValue\"} primaryText=\"Longitude\" />\r\n                  <MenuItem value={\"pressureValue\"} primaryText=\"Pressure\" />\r\n                  <MenuItem value={\"tags\"} primaryText=\"Tags\" />\r\n                  <MenuItem value={\"imageLabels\"} primaryText=\"Image Labels\" />\r\n                  <MenuItem value={\"city\"} primaryText=\"City\" />\r\n                  <MenuItem value={\"tempValue\"} primaryText=\"Temperature\" />\r\n                  <MenuItem value={\"activity\"} primaryText=\"Activity\" />\r\n                  <MenuItem\r\n                    value={\"imageLabelsConfidence\"}\r\n                    primaryText=\"imageLabelsConfidence\"\r\n                  />\r\n                </SelectField>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n              <div>\r\n                <TextField\r\n                  style={{ marginTop: \"12%\" }}\r\n                  value={this.state.query2}\r\n                  name=\"query2\"\r\n                  onChange={(e) => {\r\n                    let currentqueries = { ...this.state.queries };\r\n                    currentqueries[e.target.name] = e.target.value;\r\n                    console.log(\"Current Queries\" + currentqueries);\r\n                    this.setState({\r\n                      queries: currentqueries,\r\n                      query2: e.target.value,\r\n                    });\r\n                  }}\r\n                  hintText=\"Search Value\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <SelectField\r\n                  floatingLabelText=\"Confidence\"\r\n                  value={this.state.columnToQuery2}\r\n                  inputprops={{ min: \"0.0\", max: \"1.0\", step: \"0.01\" }}\r\n                  onChange={(event, index, value) => {\r\n                    let currentcolumns = { ...this.state.columnsToQuery };\r\n                    console.log();\r\n                    currentcolumns[\"columnToQuery2\"] = value;\r\n                    this.setState({\r\n                      columnsToQuery: currentcolumns,\r\n                      columnToQuery2: value,\r\n                    });\r\n                  }}\r\n                >\r\n                  <MenuItem\r\n                    value={\"imageLabelsConfidence\"}\r\n                    primaryText=\"imageLabelsConfidence\"\r\n                  />\r\n                </SelectField>\r\n              </div>\r\n            </div>\r\n            {this.state.showquery3 ? (\r\n              <FilteringComp\r\n                hideFilter={this.hideFilter}\r\n                changeColumn={this.ChangeFilterColumnStatus}\r\n                onchange={this.ChangeFilterStatus}\r\n                FilterNumber=\"3\"\r\n                columnvalue={this.state.columnToQuery3 || \"\"}\r\n                queryvalue={this.state.query3 || \"\"}\r\n              ></FilteringComp>\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n            {this.state.showquery4 ? (\r\n              <FilteringComp\r\n                hideFilter={this.hideFilter}\r\n                changeColumn={this.ChangeFilterColumnStatus}\r\n                onchange={this.ChangeFilterStatus}\r\n                FilterNumber=\"4\"\r\n                columnvalue={this.state.columnToQuery4 || \"\"}\r\n                queryvalue={this.state.query4 || \"\"}\r\n              ></FilteringComp>\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n            {this.state.showquery5 ? (\r\n              <FilteringComp\r\n                hideFilter={this.hideFilter}\r\n                changeColumn={this.ChangeFilterColumnStatus}\r\n                onchange={this.ChangeFilterStatus}\r\n                FilterNumber=\"5\"\r\n                columnvalue={this.state.columnToQuery5 || \"\"}\r\n                queryvalue={this.state.query5 || \"\"}\r\n              ></FilteringComp>\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n            {/* <DateTimePick dateFrom={this.dateFrom} dateTo={this.dateTo} timeFrom={this.timeFrom} timeTo={this.timeTo}/> */}\r\n\r\n            <DTP\r\n              onchange={this.changeDateValue}\r\n              onchangeTo={this.changeDateValueTo}\r\n              datevalue={this.state.dateFrom}\r\n              datevalueTo={this.state.dateTo}\r\n              timeTo={this.state.timeTo}\r\n              timevalue={this.state.timeFrom}\r\n              onTimeChange={this.changeTimeValue}\r\n              onTimeChangeTo={this.changeTimeValueTo}\r\n            />\r\n\r\n            {}\r\n            <Mattable\r\n              updateRows={this.updateSelectedRows}\r\n              selectedRows={this.state.selrows}\r\n              data={\r\n                //newresult\r\n                orderBy(\r\n                  this.state.query1 ||\r\n                    this.state.query2 ||\r\n                    this.state.query3 ||\r\n                    this.state.query4 ||\r\n                    this.state.query5\r\n                    ? SensorValuesFinal.filter((x, iter) => {\r\n                        let m = 0;\r\n                        let j = 0;\r\n                        let columnslength = Object.keys(\r\n                          this.state.columnsToQuery\r\n                        ).length;\r\n                        let cond1, cond2, cond3, cond4, cond5;\r\n                        let datefrom = new Date(this.state.dateFrom);\r\n                        let dateto = new Date(this.state.dateTo);\r\n                        let timeFrom = new Date(this.state.timeFrom);\r\n                        let timeTo = new Date(this.state.timeTo);\r\n                        let fulldateto = new Date(\r\n                          dateto.getMonth() +\r\n                            1 +\r\n                            \"/\" +\r\n                            dateto.getDate() +\r\n                            \"/\" +\r\n                            dateto.getFullYear() +\r\n                            \" \" +\r\n                            timeTo.getHours() +\r\n                            \":\" +\r\n                            timeTo.getMinutes()\r\n                        );\r\n                        let fulldatefrom = new Date(\r\n                          datefrom.getMonth() +\r\n                            1 +\r\n                            \"/\" +\r\n                            datefrom.getDate() +\r\n                            \"/\" +\r\n                            datefrom.getFullYear() +\r\n                            \" \" +\r\n                            timeFrom.getHours() +\r\n                            \":\" +\r\n                            timeFrom.getMinutes()\r\n                        );\r\n\r\n                        let datecond = false;\r\n                        let datefromFB = new Date(\r\n                          x[\"dateOfPhoto\"] + \" \" + x[\"timeOfPhoto\"]\r\n                        );\r\n                        let booldatefrom = datefromFB > fulldatefrom;\r\n                        let booldateto = datefromFB < fulldateto;\r\n\r\n                        cond1 = false;\r\n                        cond2 = false;\r\n                        cond3 = false;\r\n                        cond4 = false;\r\n                        cond5 = false;\r\n                        if (\r\n                          this.state.columnToQuery1 !== undefined &&\r\n                          this.state.columnToQuery1 !== \"\" &&\r\n                          this.state.query1 !== undefined &&\r\n                          this.state.query1 !== \"\" &&\r\n                          x[this.state.columnsToQuery[\"columnToQuery\" + 1]] !==\r\n                            undefined\r\n                        ) {\r\n                          //Check if include\r\n                          if (\r\n                            this.state.columnsToQuery[\"columnToQuery\" + 1] ===\r\n                            \"imageLabels\"\r\n                          ) {\r\n                            let tagarray = this.state.queries[\r\n                              \"query\" + 1\r\n                            ].split(\",\");\r\n                            let Firebasetagarray = x[\r\n                              this.state.columnsToQuery[\"columnToQuery\" + 1]\r\n                            ].split(\",\");\r\n                            console.log(\"TAG array \" + tagarray);\r\n                            console.log(\r\n                              \"Firebase Tag array \" + Firebasetagarray\r\n                            );\r\n\r\n                            for (m = 0; m < Firebasetagarray.length; m++) {\r\n                              if (Firebasetagarray[m] !== \"\") {\r\n                                for (j = 0; j < tagarray.length; j++) {\r\n                                  console.log(\r\n                                    \"Checking \" +\r\n                                      Firebasetagarray[m].trim() +\r\n                                      \" with \" +\r\n                                      tagarray[j].trim()\r\n                                  );\r\n                                  if (tagarray[j] !== \"\") {\r\n                                    if (\r\n                                      Firebasetagarray[m]\r\n                                        .trim()\r\n                                        .toLowerCase()\r\n                                        .includes(\r\n                                          tagarray[j].trim().toLowerCase()\r\n                                        )\r\n                                    ) {\r\n                                      if (\r\n                                        datefromFB > fulldatefrom &&\r\n                                        datefromFB < fulldateto\r\n                                      ) {\r\n                                        console.log(\"date true\");\r\n                                        //return true;\r\n                                        // cond1=true;\r\n                                        if (\r\n                                          this.state.columnsToQuery[\r\n                                            \"columnToQuery\" + 2\r\n                                          ] === \"imageLabelsConfidence\"\r\n                                        ) {\r\n                                          console.log(\r\n                                            x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ]\r\n                                          );\r\n                                          let confidencevalue = parseFloat(\r\n                                            this.state.queries[\"query\" + 2]\r\n                                          );\r\n                                          if (\r\n                                            x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ] !== undefined\r\n                                          ) {\r\n                                            let Firebaseconfarray = x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ].split(\",\");\r\n                                            console.log(\r\n                                              \"checking \" +\r\n                                                Firebaseconfarray[m] +\r\n                                                \" with \" +\r\n                                                confidencevalue\r\n                                            );\r\n                                            if (\r\n                                              Firebaseconfarray[m] >\r\n                                              confidencevalue\r\n                                            ) {\r\n                                              cond1 = true;\r\n                                              console.log(\"passed conftest\");\r\n                                            }\r\n                                          } else {\r\n                                            cond1 = true;\r\n                                            console.log(\"passed conftest\");\r\n                                          }\r\n                                        }\r\n                                      } else {\r\n                                        console.log(\"date false\");\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                          } else if (\r\n                            x[this.state.columnsToQuery[\"columnToQuery\" + 1]]\r\n                              .toLowerCase()\r\n                              .includes(\r\n                                this.state.queries[\"query\" + 1].toLowerCase()\r\n                              )\r\n                          ) {\r\n                            if (\r\n                              datefromFB > fulldatefrom &&\r\n                              datefromFB < fulldateto\r\n                            ) {\r\n                              console.log(\"date true\");\r\n                              // return x[this.state.columnsToQuery[(\"columnToQuery\"+1)]].includes(this.state.queries[(\"query\"+1)])\r\n                              cond1 = true;\r\n                            } else {\r\n                              console.log(\"date false\");\r\n                            }\r\n                          }\r\n                        }\r\n                        //For FilterBox 2\r\n                        if (\r\n                          this.state.columnToQuery2 !== undefined &&\r\n                          this.state.columnToQuery2 !== \"\" &&\r\n                          this.state.query2 !== undefined &&\r\n                          this.state.query2 !== \"\" &&\r\n                          x[this.state.columnsToQuery[\"columnToQuery\" + 2]] !==\r\n                            undefined\r\n                        ) {\r\n                          if (\r\n                            this.state.columnsToQuery[\"columnToQuery\" + 2] ===\r\n                            \"imageLabels\"\r\n                          ) {\r\n                            let tagarray = this.state.queries[\r\n                              \"query\" + 2\r\n                            ].split(\",\");\r\n                            let Firebasetagarray = x[\r\n                              this.state.columnsToQuery[\"columnToQuery\" + 2]\r\n                            ].split(\",\");\r\n                            console.log(\"TAG array \" + tagarray);\r\n                            console.log(\r\n                              \"Firebase Tag array \" + Firebasetagarray\r\n                            );\r\n\r\n                            for (m = 0; m < Firebasetagarray.length; m++) {\r\n                              if (Firebasetagarray[m] !== \"\") {\r\n                                for (j = 0; j < tagarray.length; j++) {\r\n                                  console.log(\r\n                                    \"Checking \" +\r\n                                      Firebasetagarray[m].trim() +\r\n                                      \" with \" +\r\n                                      tagarray[j].trim()\r\n                                  );\r\n                                  if (tagarray[j] !== \"\") {\r\n                                    if (\r\n                                      Firebasetagarray[m]\r\n                                        .trim()\r\n                                        .toLowerCase()\r\n                                        .includes(\r\n                                          tagarray[j].trim().toLowerCase()\r\n                                        )\r\n                                    ) {\r\n                                      if (\r\n                                        datefromFB > fulldatefrom &&\r\n                                        datefromFB < fulldateto\r\n                                      ) {\r\n                                        console.log(\"date true\");\r\n                                        //return true;\r\n                                        cond2 = true;\r\n                                        console.log(\"passed conftest2\");\r\n                                      } else {\r\n                                        console.log(\"date false\");\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n\r\n                          if (\r\n                            x[\r\n                              this.state.columnsToQuery[\"columnToQuery\" + 2]\r\n                            ].includes(this.state.queries[\"query\" + 2])\r\n                          ) {\r\n                            if (\r\n                              datefromFB > fulldatefrom &&\r\n                              datefromFB < fulldateto\r\n                            ) {\r\n                              console.log(\"date true\");\r\n                              //return x[this.state.columnsToQuery[(\"columnToQuery\"+2)]].includes(this.state.queries[(\"query\"+2)])\r\n                              cond2 = true;\r\n                              console.log(\"passed conftest2\");\r\n                            } else {\r\n                              console.log(\"date false\");\r\n                            }\r\n                          }\r\n                        } else {\r\n                          cond2 = true;\r\n                        }\r\n                        //For FilterBox 3\r\n                        if (\r\n                          this.state.columnToQuery3 !== undefined &&\r\n                          this.state.columnToQuery3 !== \"\" &&\r\n                          this.state.query3 !== undefined &&\r\n                          this.state.query3 !== \"\" &&\r\n                          x[this.state.columnsToQuery[\"columnToQuery\" + 3]] !==\r\n                            undefined\r\n                        ) {\r\n                          if (\r\n                            this.state.columnsToQuery[\"columnToQuery\" + 3] ===\r\n                            \"imageLabels\"\r\n                          ) {\r\n                            let tagarray = this.state.queries[\r\n                              \"query\" + 3\r\n                            ].split(\",\");\r\n                            let Firebasetagarray = x[\r\n                              this.state.columnsToQuery[\"columnToQuery\" + 3]\r\n                            ].split(\",\");\r\n                            console.log(\"TAG array \" + tagarray);\r\n                            console.log(\r\n                              \"Firebase Tag array \" + Firebasetagarray\r\n                            );\r\n\r\n                            for (m = 0; m < Firebasetagarray.length; m++) {\r\n                              if (Firebasetagarray[m] !== \"\") {\r\n                                for (j = 0; j < tagarray.length; j++) {\r\n                                  console.log(\r\n                                    \"Checking \" +\r\n                                      Firebasetagarray[m].trim() +\r\n                                      \" with \" +\r\n                                      tagarray[j].trim()\r\n                                  );\r\n                                  if (tagarray[j] !== \"\") {\r\n                                    if (\r\n                                      Firebasetagarray[m]\r\n                                        .trim()\r\n                                        .toLowerCase()\r\n                                        .includes(\r\n                                          tagarray[j].trim().toLowerCase()\r\n                                        )\r\n                                    ) {\r\n                                      if (\r\n                                        datefromFB > fulldatefrom &&\r\n                                        datefromFB < fulldateto\r\n                                      ) {\r\n                                        console.log(\"date true\");\r\n                                        //  return true;\r\n                                        // cond3=true;\r\n                                        if (\r\n                                          this.state.columnsToQuery[\r\n                                            \"columnToQuery\" + 2\r\n                                          ] === \"imageLabelsConfidence\"\r\n                                        ) {\r\n                                          console.log(\r\n                                            x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ]\r\n                                          );\r\n                                          let confidencevalue = parseFloat(\r\n                                            this.state.queries[\"query\" + 2]\r\n                                          );\r\n                                          if (\r\n                                            x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ] !== undefined\r\n                                          ) {\r\n                                            let Firebaseconfarray = x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ].split(\",\");\r\n                                            console.log(\r\n                                              \"checking \" +\r\n                                                Firebaseconfarray[m] +\r\n                                                \" with \" +\r\n                                                confidencevalue\r\n                                            );\r\n                                            if (\r\n                                              Firebaseconfarray[m] >\r\n                                              confidencevalue\r\n                                            ) {\r\n                                              cond3 = true;\r\n                                              console.log(\"passed conftest3\");\r\n                                              console.log(\"passed conftest\");\r\n                                            }\r\n                                          } else {\r\n                                            cond3 = true;\r\n                                            console.log(\"passed conftest3\");\r\n                                          }\r\n                                        }\r\n                                      } else {\r\n                                        console.log(\"date false\");\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                          if (\r\n                            x[this.state.columnsToQuery[\"columnToQuery\" + 3]]\r\n                              .toLowerCase()\r\n                              .includes(\r\n                                this.state.queries[\"query\" + 3].toLowerCase()\r\n                              )\r\n                          ) {\r\n                            if (\r\n                              datefromFB > fulldatefrom &&\r\n                              datefromFB < fulldateto\r\n                            ) {\r\n                              console.log(\"date true\");\r\n                              // return x[this.state.columnsToQuery[(\"columnToQuery\"+3)]].includes(this.state.queries[(\"query\"+3)])\r\n                              cond3 = true;\r\n                            } else {\r\n                              console.log(\"date false\");\r\n                            }\r\n                          }\r\n                        } else {\r\n                          cond3 = true;\r\n                        }\r\n                        //For FilterBox 4\r\n                        if (\r\n                          this.state.columnToQuery4 !== undefined &&\r\n                          this.state.columnToQuery4 !== \"\" &&\r\n                          this.state.query4 !== undefined &&\r\n                          this.state.query4 !== \"\" &&\r\n                          x[this.state.columnsToQuery[\"columnToQuery\" + 4]] !==\r\n                            undefined\r\n                        ) {\r\n                          if (\r\n                            this.state.columnsToQuery[\"columnToQuery\" + 4] ===\r\n                            \"imageLabels\"\r\n                          ) {\r\n                            let tagarray = this.state.queries[\r\n                              \"query\" + 4\r\n                            ].split(\",\");\r\n                            let Firebasetagarray = x[\r\n                              this.state.columnsToQuery[\"columnToQuery\" + 4]\r\n                            ].split(\",\");\r\n                            console.log(\"TAG array \" + tagarray);\r\n                            console.log(\r\n                              \"Firebase Tag array \" + Firebasetagarray\r\n                            );\r\n\r\n                            for (m = 0; m < Firebasetagarray.length; m++) {\r\n                              if (Firebasetagarray[m] !== \"\") {\r\n                                for (j = 0; j < tagarray.length; j++) {\r\n                                  console.log(\r\n                                    \"Checking \" +\r\n                                      Firebasetagarray[m].trim() +\r\n                                      \" with \" +\r\n                                      tagarray[j].trim()\r\n                                  );\r\n                                  if (tagarray[j] !== \"\") {\r\n                                    if (\r\n                                      Firebasetagarray[m]\r\n                                        .trim()\r\n                                        .toLowerCase()\r\n                                        .includes(\r\n                                          tagarray[j].trim().toLowerCase()\r\n                                        )\r\n                                    ) {\r\n                                      if (\r\n                                        datefromFB > fulldatefrom &&\r\n                                        datefromFB < fulldateto\r\n                                      ) {\r\n                                        console.log(\"date true\");\r\n                                        //  return true;\r\n                                        // cond3=true;\r\n                                        if (\r\n                                          this.state.columnsToQuery[\r\n                                            \"columnToQuery\" + 2\r\n                                          ] === \"imageLabelsConfidence\"\r\n                                        ) {\r\n                                          console.log(\r\n                                            x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ]\r\n                                          );\r\n                                          let confidencevalue = parseFloat(\r\n                                            this.state.queries[\"query\" + 2]\r\n                                          );\r\n                                          if (\r\n                                            x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ] !== undefined\r\n                                          ) {\r\n                                            let Firebaseconfarray = x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ].split(\",\");\r\n                                            console.log(\r\n                                              \"checking \" +\r\n                                                Firebaseconfarray[m] +\r\n                                                \" with \" +\r\n                                                confidencevalue\r\n                                            );\r\n                                            if (\r\n                                              Firebaseconfarray[m] >\r\n                                              confidencevalue\r\n                                            ) {\r\n                                              cond4 = true;\r\n                                              console.log(\"passed conftest4\");\r\n                                              console.log(\"passed conftest\");\r\n                                            }\r\n                                          } else {\r\n                                            cond3 = true;\r\n                                            console.log(\"passed conftest4\");\r\n                                          }\r\n                                        }\r\n                                      } else {\r\n                                        console.log(\"date false\");\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                          if (\r\n                            x[this.state.columnsToQuery[\"columnToQuery\" + 4]]\r\n                              .toLowerCase()\r\n                              .includes(\r\n                                this.state.queries[\"query\" + 4].toLowerCase()\r\n                              )\r\n                          ) {\r\n                            if (\r\n                              datefromFB > fulldatefrom &&\r\n                              datefromFB < fulldateto\r\n                            ) {\r\n                              console.log(\"date true\");\r\n                              // return x[this.state.columnsToQuery[(\"columnToQuery\"+4)]].includes(this.state.queries[(\"query\"+4)])\r\n                              cond3 = true;\r\n                            } else {\r\n                              console.log(\"date false\");\r\n                            }\r\n                          }\r\n                        } else {\r\n                          cond4 = true;\r\n                        }\r\n                        //For FilterBox 5\r\n                        if (\r\n                          this.state.columnToQuery5 !== undefined &&\r\n                          this.state.columnToQuery5 !== \"\" &&\r\n                          this.state.query5 !== undefined &&\r\n                          this.state.query5 !== \"\" &&\r\n                          x[this.state.columnsToQuery[\"columnToQuery\" + 5]] !==\r\n                            undefined\r\n                        ) {\r\n                          if (\r\n                            this.state.columnsToQuery[\"columnToQuery\" + 5] ===\r\n                            \"imageLabels\"\r\n                          ) {\r\n                            let tagarray = this.state.queries[\r\n                              \"query\" + 5\r\n                            ].split(\",\");\r\n                            let Firebasetagarray = x[\r\n                              this.state.columnsToQuery[\"columnToQuery\" + 5]\r\n                            ].split(\",\");\r\n                            console.log(\"TAG array \" + tagarray);\r\n                            console.log(\r\n                              \"Firebase Tag array \" + Firebasetagarray\r\n                            );\r\n                            let i = 0;\r\n                            for (m = 0; m < Firebasetagarray.length; m++) {\r\n                              if (Firebasetagarray[m] !== \"\") {\r\n                                for (j = 0; j < tagarray.length; j++) {\r\n                                  console.log(\r\n                                    \"Checking \" +\r\n                                      Firebasetagarray[m].trim() +\r\n                                      \" with \" +\r\n                                      tagarray[j].trim()\r\n                                  );\r\n                                  if (tagarray[j] !== \"\") {\r\n                                    if (\r\n                                      Firebasetagarray[m]\r\n                                        .trim()\r\n                                        .toLowerCase()\r\n                                        .includes(\r\n                                          tagarray[j].trim().toLowerCase()\r\n                                        )\r\n                                    ) {\r\n                                      if (\r\n                                        datefromFB > fulldatefrom &&\r\n                                        datefromFB < fulldateto\r\n                                      ) {\r\n                                        console.log(\"date true\");\r\n                                        // return true;\r\n                                        //cond5=true;\r\n                                        if (\r\n                                          this.state.columnsToQuery[\r\n                                            \"columnToQuery\" + 2\r\n                                          ] === \"imageLabelsConfidence\"\r\n                                        ) {\r\n                                          console.log(\r\n                                            x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ]\r\n                                          );\r\n                                          let confidencevalue = parseFloat(\r\n                                            this.state.queries[\"query\" + 2]\r\n                                          );\r\n                                          if (\r\n                                            x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ] !== undefined\r\n                                          ) {\r\n                                            let Firebaseconfarray = x[\r\n                                              this.state.columnsToQuery[\r\n                                                \"columnToQuery\" + 2\r\n                                              ]\r\n                                            ].split(\",\");\r\n                                            console.log(\r\n                                              \"checking \" +\r\n                                                Firebaseconfarray[m] +\r\n                                                \" with \" +\r\n                                                confidencevalue\r\n                                            );\r\n                                            if (\r\n                                              Firebaseconfarray[m] >\r\n                                              confidencevalue\r\n                                            ) {\r\n                                              cond5 = true;\r\n                                              console.log(\"passed conftest\");\r\n                                            }\r\n                                          } else {\r\n                                            cond5 = true;\r\n                                            console.log(\"passed conftest5\");\r\n                                          }\r\n                                        }\r\n                                      } else {\r\n                                        console.log(\"date false\");\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                          if (\r\n                            x[this.state.columnsToQuery[\"columnToQuery\" + 5]]\r\n                              .toLowerCase()\r\n                              .includes(\r\n                                this.state.queries[\"query\" + 5].toLowerCase()\r\n                              )\r\n                          ) {\r\n                            if (\r\n                              datefromFB > fulldatefrom &&\r\n                              datefromFB < fulldateto\r\n                            ) {\r\n                              console.log(\"date true\");\r\n                              // return x[this.state.columnsToQuery[(\"columnToQuery\"+5)]].includes(this.state.queries[(\"query\"+5)])\r\n                              cond5 = true;\r\n                              console.log(\"passed conftest5\");\r\n                            } else {\r\n                              console.log(\"date false\");\r\n                            }\r\n                          }\r\n                        } else {\r\n                          cond5 = true;\r\n                        }\r\n                        console.log(\"Cond 1 is \" + cond1);\r\n                        console.log(\"Cond 2 is \" + cond2);\r\n                        console.log(\"Cond 3 is \" + cond3);\r\n                        console.log(\"Cond 4 is \" + cond4);\r\n                        console.log(\"Cond 5 is \" + cond5);\r\n                        if (cond1 && cond2 && cond3 && cond4 & cond5) {\r\n                          this.state.MapLocs[iter].eligible = true;\r\n                          // console.log(this.state.MapLocs)\r\n\r\n                          // console.log(this.state.posremove)\r\n                          return true;\r\n                        } else {\r\n                          this.state.MapLocs[iter].eligible = false;\r\n                          // this.state.posremove.push(iter);\r\n                        }\r\n                      })\r\n                    : SensorValuesFinal\r\n                )\r\n              }\r\n              header={[\r\n                {\r\n                  name: \"User\",\r\n                  prop: \"user\",\r\n                },\r\n                {\r\n                  name: \"ambTempValue\",\r\n                  prop: \"ambTempValue\",\r\n                },\r\n                {\r\n                  name: \"latitudeValue\",\r\n                  prop: \"latitudeValue\",\r\n                },\r\n                {\r\n                  name: \"lightValue\",\r\n                  prop: \"lightValue\",\r\n                },\r\n                {\r\n                  name: \"longitudeValue\",\r\n                  prop: \"longitudeValue\",\r\n                },\r\n                {\r\n                  name: \"pressureValue\",\r\n                  prop: \"pressureValue\",\r\n                },\r\n                {\r\n                  name: \"Tags\",\r\n                  prop: \"tags\",\r\n                },\r\n                {\r\n                  name: \"ImageLabels\",\r\n                  prop: \"imageLabels\",\r\n                },\r\n                {\r\n                  name: \"Day Of Photo\",\r\n                  prop: \"dateOfPhoto\",\r\n                },\r\n                {\r\n                  name: \"City\",\r\n                  prop: \"city\",\r\n                },\r\n                {\r\n                  name: \"Temperature\",\r\n                  prop: \"tempValue\",\r\n                },\r\n                {\r\n                  name: \"Activity\",\r\n                  prop: \"activity\",\r\n                },\r\n                {\r\n                  name: \"LabelsConfidence\",\r\n                  prop: \"imageLabelsConfidence\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </MuiThemeProvider>\r\n        <Gmaps\r\n          style={{ margintop: \"100px\" }}\r\n          markers={this.state.Mapsarray}\r\n          showonmap={() => this.viewOnMaps(this.state.NewMapLocs)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}